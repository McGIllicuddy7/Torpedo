<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="3007"><g><title>__pthread_mutex_droplock (1 samples, 0.03%)</title><rect x="0.0665%" y="709" width="0.0333%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="1"/><text x="0.3165%" y="719.50"></text></g><g><title>6099103744 (13 samples, 0.43%)</title><rect x="0.0000%" y="741" width="0.4323%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="13"/><text x="0.2500%" y="751.50"></text></g><g><title>__pthread_wqthread_setup (13 samples, 0.43%)</title><rect x="0.0000%" y="725" width="0.4323%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="13"/><text x="0.2500%" y="735.50"></text></g><g><title>_mach_continuous_time (10 samples, 0.33%)</title><rect x="0.0998%" y="709" width="0.3326%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="10"/><text x="0.3498%" y="719.50"></text></g><g><title>__kernelrpc_vm_read (10 samples, 0.33%)</title><rect x="0.0998%" y="693" width="0.3326%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="10"/><text x="0.3498%" y="703.50"></text></g><g><title>_proc_clear_dirty (10 samples, 0.33%)</title><rect x="0.0998%" y="677" width="0.3326%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="10"/><text x="0.3498%" y="687.50"></text></g><g><title>6099677184 (2 samples, 0.07%)</title><rect x="0.4323%" y="741" width="0.0665%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="2"/><text x="0.6823%" y="751.50"></text></g><g><title>__pthread_wqthread_setup (1 samples, 0.03%)</title><rect x="0.4656%" y="725" width="0.0333%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="1"/><text x="0.7156%" y="735.50"></text></g><g><title>_proc_clear_dirty (1 samples, 0.03%)</title><rect x="0.4656%" y="709" width="0.0333%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="1"/><text x="0.7156%" y="719.50"></text></g><g><title>___workq_open (4 samples, 0.13%)</title><rect x="0.6319%" y="709" width="0.1330%" height="15" fill="rgb(220,122,19)" fg:x="19" fg:w="4"/><text x="0.8819%" y="719.50"></text></g><g><title>__pthread_mutex_droplock (1 samples, 0.03%)</title><rect x="0.7649%" y="709" width="0.0333%" height="15" fill="rgb(250,228,42)" fg:x="23" fg:w="1"/><text x="1.0149%" y="719.50"></text></g><g><title>_proc_clear_dirty (4 samples, 0.13%)</title><rect x="0.7981%" y="677" width="0.1330%" height="15" fill="rgb(240,193,28)" fg:x="24" fg:w="4"/><text x="1.0481%" y="687.50"></text></g><g><title>6100250624 (16 samples, 0.53%)</title><rect x="0.4988%" y="741" width="0.5321%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="16"/><text x="0.7488%" y="751.50"></text></g><g><title>__pthread_cond_wait (16 samples, 0.53%)</title><rect x="0.4988%" y="725" width="0.5321%" height="15" fill="rgb(206,188,39)" fg:x="15" fg:w="16"/><text x="0.7488%" y="735.50"></text></g><g><title>_mach_continuous_time (7 samples, 0.23%)</title><rect x="0.7981%" y="709" width="0.2328%" height="15" fill="rgb(217,207,13)" fg:x="24" fg:w="7"/><text x="1.0481%" y="719.50"></text></g><g><title>__kernelrpc_vm_read (7 samples, 0.23%)</title><rect x="0.7981%" y="693" width="0.2328%" height="15" fill="rgb(231,73,38)" fg:x="24" fg:w="7"/><text x="1.0481%" y="703.50"></text></g><g><title>_proc_signal_delegate (3 samples, 0.10%)</title><rect x="0.9312%" y="677" width="0.0998%" height="15" fill="rgb(225,20,46)" fg:x="28" fg:w="3"/><text x="1.1812%" y="687.50"></text></g><g><title>6100824064 (1 samples, 0.03%)</title><rect x="1.0309%" y="741" width="0.0333%" height="15" fill="rgb(210,31,41)" fg:x="31" fg:w="1"/><text x="1.2809%" y="751.50"></text></g><g><title>__pthread_wqthread_setup (1 samples, 0.03%)</title><rect x="1.0309%" y="725" width="0.0333%" height="15" fill="rgb(221,200,47)" fg:x="31" fg:w="1"/><text x="1.2809%" y="735.50"></text></g><g><title>6101397504 (8 samples, 0.27%)</title><rect x="1.0642%" y="741" width="0.2660%" height="15" fill="rgb(226,26,5)" fg:x="32" fg:w="8"/><text x="1.3142%" y="751.50"></text></g><g><title>__pthread_wqthread_setup (7 samples, 0.23%)</title><rect x="1.0974%" y="725" width="0.2328%" height="15" fill="rgb(249,33,26)" fg:x="33" fg:w="7"/><text x="1.3474%" y="735.50"></text></g><g><title>_mach_continuous_time (4 samples, 0.13%)</title><rect x="1.1972%" y="709" width="0.1330%" height="15" fill="rgb(235,183,28)" fg:x="36" fg:w="4"/><text x="1.4472%" y="719.50"></text></g><g><title>__kernelrpc_vm_read (4 samples, 0.13%)</title><rect x="1.1972%" y="693" width="0.1330%" height="15" fill="rgb(221,5,38)" fg:x="36" fg:w="4"/><text x="1.4472%" y="703.50"></text></g><g><title>_proc_clear_dirty (4 samples, 0.13%)</title><rect x="1.1972%" y="677" width="0.1330%" height="15" fill="rgb(247,18,42)" fg:x="36" fg:w="4"/><text x="1.4472%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="1.3302%" y="405" width="0.0998%" height="15" fill="rgb(241,131,45)" fg:x="40" fg:w="3"/><text x="1.5802%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="1.3302%" y="389" width="0.0998%" height="15" fill="rgb(249,31,29)" fg:x="40" fg:w="3"/><text x="1.5802%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="1.3302%" y="373" width="0.0998%" height="15" fill="rgb(225,111,53)" fg:x="40" fg:w="3"/><text x="1.5802%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3 samples, 0.10%)</title><rect x="1.3302%" y="357" width="0.0998%" height="15" fill="rgb(238,160,17)" fg:x="40" fg:w="3"/><text x="1.5802%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.10%)</title><rect x="1.3302%" y="341" width="0.0998%" height="15" fill="rgb(214,148,48)" fg:x="40" fg:w="3"/><text x="1.5802%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.10%)</title><rect x="1.3302%" y="325" width="0.0998%" height="15" fill="rgb(232,36,49)" fg:x="40" fg:w="3"/><text x="1.5802%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.10%)</title><rect x="1.3302%" y="309" width="0.0998%" height="15" fill="rgb(209,103,24)" fg:x="40" fg:w="3"/><text x="1.5802%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.60%)</title><rect x="1.3302%" y="501" width="0.5986%" height="15" fill="rgb(229,88,8)" fg:x="40" fg:w="18"/><text x="1.5802%" y="511.50"></text></g><g><title>&lt;torpedo::level::TransformComp as core::clone::Clone&gt;::clone (18 samples, 0.60%)</title><rect x="1.3302%" y="485" width="0.5986%" height="15" fill="rgb(213,181,19)" fg:x="40" fg:w="18"/><text x="1.5802%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.60%)</title><rect x="1.3302%" y="469" width="0.5986%" height="15" fill="rgb(254,191,54)" fg:x="40" fg:w="18"/><text x="1.5802%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.60%)</title><rect x="1.3302%" y="453" width="0.5986%" height="15" fill="rgb(241,83,37)" fg:x="40" fg:w="18"/><text x="1.5802%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.60%)</title><rect x="1.3302%" y="437" width="0.5986%" height="15" fill="rgb(233,36,39)" fg:x="40" fg:w="18"/><text x="1.5802%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.60%)</title><rect x="1.3302%" y="421" width="0.5986%" height="15" fill="rgb(226,3,54)" fg:x="40" fg:w="18"/><text x="1.5802%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.50%)</title><rect x="1.4300%" y="405" width="0.4988%" height="15" fill="rgb(245,192,40)" fg:x="43" fg:w="15"/><text x="1.6800%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.50%)</title><rect x="1.4300%" y="389" width="0.4988%" height="15" fill="rgb(238,167,29)" fg:x="43" fg:w="15"/><text x="1.6800%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.9621%" y="421" width="0.0333%" height="15" fill="rgb(232,182,51)" fg:x="59" fg:w="1"/><text x="2.2121%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.9621%" y="405" width="0.0333%" height="15" fill="rgb(231,60,39)" fg:x="59" fg:w="1"/><text x="2.2121%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="1.9621%" y="389" width="0.0333%" height="15" fill="rgb(208,69,12)" fg:x="59" fg:w="1"/><text x="2.2121%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="1.9621%" y="373" width="0.0333%" height="15" fill="rgb(235,93,37)" fg:x="59" fg:w="1"/><text x="2.2121%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="1.9621%" y="357" width="0.0333%" height="15" fill="rgb(213,116,39)" fg:x="59" fg:w="1"/><text x="2.2121%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="1.9621%" y="341" width="0.0333%" height="15" fill="rgb(222,207,29)" fg:x="59" fg:w="1"/><text x="2.2121%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="1.9621%" y="325" width="0.0333%" height="15" fill="rgb(206,96,30)" fg:x="59" fg:w="1"/><text x="2.2121%" y="335.50"></text></g><g><title>&lt;torpedo::level::TransformComp as core::clone::Clone&gt;::clone (10 samples, 0.33%)</title><rect x="1.9288%" y="501" width="0.3326%" height="15" fill="rgb(218,138,4)" fg:x="58" fg:w="10"/><text x="2.1788%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.30%)</title><rect x="1.9621%" y="485" width="0.2993%" height="15" fill="rgb(250,191,14)" fg:x="59" fg:w="9"/><text x="2.2121%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.30%)</title><rect x="1.9621%" y="469" width="0.2993%" height="15" fill="rgb(239,60,40)" fg:x="59" fg:w="9"/><text x="2.2121%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.30%)</title><rect x="1.9621%" y="453" width="0.2993%" height="15" fill="rgb(206,27,48)" fg:x="59" fg:w="9"/><text x="2.2121%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.30%)</title><rect x="1.9621%" y="437" width="0.2993%" height="15" fill="rgb(225,35,8)" fg:x="59" fg:w="9"/><text x="2.2121%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.27%)</title><rect x="1.9953%" y="421" width="0.2660%" height="15" fill="rgb(250,213,24)" fg:x="60" fg:w="8"/><text x="2.2453%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.27%)</title><rect x="1.9953%" y="405" width="0.2660%" height="15" fill="rgb(247,123,22)" fg:x="60" fg:w="8"/><text x="2.2453%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.43%)</title><rect x="2.2614%" y="485" width="0.4323%" height="15" fill="rgb(231,138,38)" fg:x="68" fg:w="13"/><text x="2.5114%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.43%)</title><rect x="2.2614%" y="469" width="0.4323%" height="15" fill="rgb(231,145,46)" fg:x="68" fg:w="13"/><text x="2.5114%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.43%)</title><rect x="2.2614%" y="453" width="0.4323%" height="15" fill="rgb(251,118,11)" fg:x="68" fg:w="13"/><text x="2.5114%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.43%)</title><rect x="2.2614%" y="437" width="0.4323%" height="15" fill="rgb(217,147,25)" fg:x="68" fg:w="13"/><text x="2.5114%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.43%)</title><rect x="2.2614%" y="421" width="0.4323%" height="15" fill="rgb(247,81,37)" fg:x="68" fg:w="13"/><text x="2.5114%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.43%)</title><rect x="2.2614%" y="405" width="0.4323%" height="15" fill="rgb(209,12,38)" fg:x="68" fg:w="13"/><text x="2.5114%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (13 samples, 0.43%)</title><rect x="2.2614%" y="389" width="0.4323%" height="15" fill="rgb(227,1,9)" fg:x="68" fg:w="13"/><text x="2.5114%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (13 samples, 0.43%)</title><rect x="2.2614%" y="373" width="0.4323%" height="15" fill="rgb(248,47,43)" fg:x="68" fg:w="13"/><text x="2.5114%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.43%)</title><rect x="2.2614%" y="357" width="0.4323%" height="15" fill="rgb(221,10,30)" fg:x="68" fg:w="13"/><text x="2.5114%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.43%)</title><rect x="2.2614%" y="341" width="0.4323%" height="15" fill="rgb(210,229,1)" fg:x="68" fg:w="13"/><text x="2.5114%" y="351.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.43%)</title><rect x="2.2614%" y="325" width="0.4323%" height="15" fill="rgb(222,148,37)" fg:x="68" fg:w="13"/><text x="2.5114%" y="335.50"></text></g><g><title>&lt;torpedo::physics::PhysicsComp as core::clone::Clone&gt;::clone (19 samples, 0.63%)</title><rect x="2.2614%" y="501" width="0.6319%" height="15" fill="rgb(234,67,33)" fg:x="68" fg:w="19"/><text x="2.5114%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.20%)</title><rect x="2.6937%" y="485" width="0.1995%" height="15" fill="rgb(247,98,35)" fg:x="81" fg:w="6"/><text x="2.9437%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.20%)</title><rect x="2.6937%" y="469" width="0.1995%" height="15" fill="rgb(247,138,52)" fg:x="81" fg:w="6"/><text x="2.9437%" y="479.50"></text></g><g><title>torpedo::physics::update (2 samples, 0.07%)</title><rect x="2.8267%" y="453" width="0.0665%" height="15" fill="rgb(213,79,30)" fg:x="85" fg:w="2"/><text x="3.0767%" y="463.50"></text></g><g><title>&lt;torpedo::physics::PhysicsComp as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="2.8267%" y="437" width="0.0665%" height="15" fill="rgb(246,177,23)" fg:x="85" fg:w="2"/><text x="3.0767%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="2.8267%" y="421" width="0.0665%" height="15" fill="rgb(230,62,27)" fg:x="85" fg:w="2"/><text x="3.0767%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="2.8267%" y="405" width="0.0665%" height="15" fill="rgb(216,154,8)" fg:x="85" fg:w="2"/><text x="3.0767%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="2.8932%" y="501" width="0.0333%" height="15" fill="rgb(244,35,45)" fg:x="87" fg:w="1"/><text x="3.1432%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="2.8932%" y="485" width="0.0333%" height="15" fill="rgb(251,115,12)" fg:x="87" fg:w="1"/><text x="3.1432%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1 samples, 0.03%)</title><rect x="2.8932%" y="469" width="0.0333%" height="15" fill="rgb(240,54,50)" fg:x="87" fg:w="1"/><text x="3.1432%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="2.8932%" y="453" width="0.0333%" height="15" fill="rgb(233,84,52)" fg:x="87" fg:w="1"/><text x="3.1432%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="2.8932%" y="437" width="0.0333%" height="15" fill="rgb(207,117,47)" fg:x="87" fg:w="1"/><text x="3.1432%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.23%)</title><rect x="2.9265%" y="405" width="0.2328%" height="15" fill="rgb(249,43,39)" fg:x="88" fg:w="7"/><text x="3.1765%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.23%)</title><rect x="2.9265%" y="389" width="0.2328%" height="15" fill="rgb(209,38,44)" fg:x="88" fg:w="7"/><text x="3.1765%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (7 samples, 0.23%)</title><rect x="2.9265%" y="373" width="0.2328%" height="15" fill="rgb(236,212,23)" fg:x="88" fg:w="7"/><text x="3.1765%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5 samples, 0.17%)</title><rect x="2.9930%" y="357" width="0.1663%" height="15" fill="rgb(242,79,21)" fg:x="90" fg:w="5"/><text x="3.2430%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (5 samples, 0.17%)</title><rect x="2.9930%" y="341" width="0.1663%" height="15" fill="rgb(211,96,35)" fg:x="90" fg:w="5"/><text x="3.2430%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.17%)</title><rect x="2.9930%" y="325" width="0.1663%" height="15" fill="rgb(253,215,40)" fg:x="90" fg:w="5"/><text x="3.2430%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="3.1593%" y="245" width="0.0333%" height="15" fill="rgb(211,81,21)" fg:x="95" fg:w="1"/><text x="3.4093%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="3.1593%" y="229" width="0.0333%" height="15" fill="rgb(208,190,38)" fg:x="95" fg:w="1"/><text x="3.4093%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="3.1593%" y="213" width="0.0333%" height="15" fill="rgb(235,213,38)" fg:x="95" fg:w="1"/><text x="3.4093%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="3.1593%" y="197" width="0.0333%" height="15" fill="rgb(237,122,38)" fg:x="95" fg:w="1"/><text x="3.4093%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="3.1593%" y="181" width="0.0333%" height="15" fill="rgb(244,218,35)" fg:x="95" fg:w="1"/><text x="3.4093%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;,core::slice::iter::Iter&lt;usize&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="3.1593%" y="165" width="0.0333%" height="15" fill="rgb(240,68,47)" fg:x="95" fg:w="1"/><text x="3.4093%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="3.1593%" y="149" width="0.0333%" height="15" fill="rgb(210,16,53)" fg:x="95" fg:w="1"/><text x="3.4093%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="3.1593%" y="133" width="0.0333%" height="15" fill="rgb(235,124,12)" fg:x="95" fg:w="1"/><text x="3.4093%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt; (1 samples, 0.03%)</title><rect x="3.1593%" y="117" width="0.0333%" height="15" fill="rgb(224,169,11)" fg:x="95" fg:w="1"/><text x="3.4093%" y="127.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="3.1593%" y="101" width="0.0333%" height="15" fill="rgb(250,166,2)" fg:x="95" fg:w="1"/><text x="3.4093%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;[usize],alloc::alloc::Global&gt;&gt; (1 samples, 0.03%)</title><rect x="3.1593%" y="85" width="0.0333%" height="15" fill="rgb(242,216,29)" fg:x="95" fg:w="1"/><text x="3.4093%" y="95.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="3.1593%" y="69" width="0.0333%" height="15" fill="rgb(230,116,27)" fg:x="95" fg:w="1"/><text x="3.4093%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;[usize]&gt;&gt; (1 samples, 0.03%)</title><rect x="3.1593%" y="53" width="0.0333%" height="15" fill="rgb(228,99,48)" fg:x="95" fg:w="1"/><text x="3.4093%" y="63.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="3.1593%" y="37" width="0.0333%" height="15" fill="rgb(253,11,6)" fg:x="95" fg:w="1"/><text x="3.4093%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.30%)</title><rect x="2.9265%" y="437" width="0.2993%" height="15" fill="rgb(247,143,39)" fg:x="88" fg:w="9"/><text x="3.1765%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.30%)</title><rect x="2.9265%" y="421" width="0.2993%" height="15" fill="rgb(236,97,10)" fg:x="88" fg:w="9"/><text x="3.1765%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="3.1593%" y="405" width="0.0665%" height="15" fill="rgb(233,208,19)" fg:x="95" fg:w="2"/><text x="3.4093%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;,core::slice::iter::Iter&lt;usize&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="3.1593%" y="389" width="0.0665%" height="15" fill="rgb(216,164,2)" fg:x="95" fg:w="2"/><text x="3.4093%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="3.1593%" y="373" width="0.0665%" height="15" fill="rgb(220,129,5)" fg:x="95" fg:w="2"/><text x="3.4093%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt;&gt; (2 samples, 0.07%)</title><rect x="3.1593%" y="357" width="0.0665%" height="15" fill="rgb(242,17,10)" fg:x="95" fg:w="2"/><text x="3.4093%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt; (2 samples, 0.07%)</title><rect x="3.1593%" y="341" width="0.0665%" height="15" fill="rgb(242,107,0)" fg:x="95" fg:w="2"/><text x="3.4093%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="3.1593%" y="325" width="0.0665%" height="15" fill="rgb(251,28,31)" fg:x="95" fg:w="2"/><text x="3.4093%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;[usize],alloc::alloc::Global&gt;&gt; (2 samples, 0.07%)</title><rect x="3.1593%" y="309" width="0.0665%" height="15" fill="rgb(233,223,10)" fg:x="95" fg:w="2"/><text x="3.4093%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="3.1593%" y="293" width="0.0665%" height="15" fill="rgb(215,21,27)" fg:x="95" fg:w="2"/><text x="3.4093%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;[usize]&gt;&gt; (2 samples, 0.07%)</title><rect x="3.1593%" y="277" width="0.0665%" height="15" fill="rgb(232,23,21)" fg:x="95" fg:w="2"/><text x="3.4093%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="3.1593%" y="261" width="0.0665%" height="15" fill="rgb(244,5,23)" fg:x="95" fg:w="2"/><text x="3.4093%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.03%)</title><rect x="3.1926%" y="245" width="0.0333%" height="15" fill="rgb(226,81,46)" fg:x="96" fg:w="1"/><text x="3.4426%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.03%)</title><rect x="3.1926%" y="229" width="0.0333%" height="15" fill="rgb(247,70,30)" fg:x="96" fg:w="1"/><text x="3.4426%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.03%)</title><rect x="3.1926%" y="213" width="0.0333%" height="15" fill="rgb(212,68,19)" fg:x="96" fg:w="1"/><text x="3.4426%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (1 samples, 0.03%)</title><rect x="3.1926%" y="197" width="0.0333%" height="15" fill="rgb(240,187,13)" fg:x="96" fg:w="1"/><text x="3.4426%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.33%)</title><rect x="2.9265%" y="501" width="0.3326%" height="15" fill="rgb(223,113,26)" fg:x="88" fg:w="10"/><text x="3.1765%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.33%)</title><rect x="2.9265%" y="485" width="0.3326%" height="15" fill="rgb(206,192,2)" fg:x="88" fg:w="10"/><text x="3.1765%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.33%)</title><rect x="2.9265%" y="469" width="0.3326%" height="15" fill="rgb(241,108,4)" fg:x="88" fg:w="10"/><text x="3.1765%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.33%)</title><rect x="2.9265%" y="453" width="0.3326%" height="15" fill="rgb(247,173,49)" fg:x="88" fg:w="10"/><text x="3.1765%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.03%)</title><rect x="3.2258%" y="437" width="0.0333%" height="15" fill="rgb(224,114,35)" fg:x="97" fg:w="1"/><text x="3.4758%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="3.2258%" y="421" width="0.0333%" height="15" fill="rgb(245,159,27)" fg:x="97" fg:w="1"/><text x="3.4758%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="3.2258%" y="405" width="0.0333%" height="15" fill="rgb(245,172,44)" fg:x="97" fg:w="1"/><text x="3.4758%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="3.2258%" y="389" width="0.0333%" height="15" fill="rgb(236,23,11)" fg:x="97" fg:w="1"/><text x="3.4758%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="3.2258%" y="373" width="0.0333%" height="15" fill="rgb(205,117,38)" fg:x="97" fg:w="1"/><text x="3.4758%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="3.2258%" y="357" width="0.0333%" height="15" fill="rgb(237,72,25)" fg:x="97" fg:w="1"/><text x="3.4758%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="3.2258%" y="341" width="0.0333%" height="15" fill="rgb(244,70,9)" fg:x="97" fg:w="1"/><text x="3.4758%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="3.2258%" y="325" width="0.0333%" height="15" fill="rgb(217,125,39)" fg:x="97" fg:w="1"/><text x="3.4758%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;torpedo::level::TransformComp&gt;&gt; (78 samples, 2.59%)</title><rect x="3.2591%" y="501" width="2.5939%" height="15" fill="rgb(235,36,10)" fg:x="98" fg:w="78"/><text x="3.5091%" y="511.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;torpedo::level::TransformComp&gt; (78 samples, 2.59%)</title><rect x="3.2591%" y="485" width="2.5939%" height="15" fill="rgb(251,123,47)" fg:x="98" fg:w="78"/><text x="3.5091%" y="495.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[torpedo::level::Instant]&gt;&gt; (78 samples, 2.59%)</title><rect x="3.2591%" y="469" width="2.5939%" height="15" fill="rgb(221,13,13)" fg:x="98" fg:w="78"/><text x="3.5091%" y="479.50">co..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 2.59%)</title><rect x="3.2591%" y="453" width="2.5939%" height="15" fill="rgb(238,131,9)" fg:x="98" fg:w="78"/><text x="3.5091%" y="463.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (78 samples, 2.59%)</title><rect x="3.2591%" y="437" width="2.5939%" height="15" fill="rgb(211,50,8)" fg:x="98" fg:w="78"/><text x="3.5091%" y="447.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (78 samples, 2.59%)</title><rect x="3.2591%" y="421" width="2.5939%" height="15" fill="rgb(245,182,24)" fg:x="98" fg:w="78"/><text x="3.5091%" y="431.50">al..</text></g><g><title>torpedo::physics::update (1 samples, 0.03%)</title><rect x="5.8198%" y="405" width="0.0333%" height="15" fill="rgb(242,14,37)" fg:x="175" fg:w="1"/><text x="6.0698%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;torpedo::level::TransformComp&gt;&gt; (1 samples, 0.03%)</title><rect x="5.8198%" y="389" width="0.0333%" height="15" fill="rgb(246,228,12)" fg:x="175" fg:w="1"/><text x="6.0698%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::level::TransformComp&gt; (1 samples, 0.03%)</title><rect x="5.8198%" y="373" width="0.0333%" height="15" fill="rgb(213,55,15)" fg:x="175" fg:w="1"/><text x="6.0698%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[torpedo::level::Instant]&gt;&gt; (1 samples, 0.03%)</title><rect x="5.8198%" y="357" width="0.0333%" height="15" fill="rgb(209,9,3)" fg:x="175" fg:w="1"/><text x="6.0698%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="5.8198%" y="341" width="0.0333%" height="15" fill="rgb(230,59,30)" fg:x="175" fg:w="1"/><text x="6.0698%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="5.8198%" y="325" width="0.0333%" height="15" fill="rgb(209,121,21)" fg:x="175" fg:w="1"/><text x="6.0698%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="5.8198%" y="309" width="0.0333%" height="15" fill="rgb(220,109,13)" fg:x="175" fg:w="1"/><text x="6.0698%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;torpedo::physics::Collision&gt;&gt; (1 samples, 0.03%)</title><rect x="5.8530%" y="469" width="0.0333%" height="15" fill="rgb(232,18,1)" fg:x="176" fg:w="1"/><text x="6.1030%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;torpedo::physics::Collision&gt;&gt; (1 samples, 0.03%)</title><rect x="5.8530%" y="453" width="0.0333%" height="15" fill="rgb(215,41,42)" fg:x="176" fg:w="1"/><text x="6.1030%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="5.8530%" y="437" width="0.0333%" height="15" fill="rgb(224,123,36)" fg:x="176" fg:w="1"/><text x="6.1030%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;torpedo::physics::PhysicsComp&gt;&gt; (134 samples, 4.46%)</title><rect x="5.8530%" y="501" width="4.4563%" height="15" fill="rgb(240,125,3)" fg:x="176" fg:w="134"/><text x="6.1030%" y="511.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;torpedo::physics::PhysicsComp&gt; (134 samples, 4.46%)</title><rect x="5.8530%" y="485" width="4.4563%" height="15" fill="rgb(205,98,50)" fg:x="176" fg:w="134"/><text x="6.1030%" y="495.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt; (133 samples, 4.42%)</title><rect x="5.8863%" y="469" width="4.4230%" height="15" fill="rgb(205,185,37)" fg:x="177" fg:w="133"/><text x="6.1363%" y="479.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,std::hash::random::RandomState&gt;&gt; (133 samples, 4.42%)</title><rect x="5.8863%" y="453" width="4.4230%" height="15" fill="rgb(238,207,15)" fg:x="177" fg:w="133"/><text x="6.1363%" y="463.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (133 samples, 4.42%)</title><rect x="5.8863%" y="437" width="4.4230%" height="15" fill="rgb(213,199,42)" fg:x="177" fg:w="133"/><text x="6.1363%" y="447.50">core:..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 samples, 4.42%)</title><rect x="5.8863%" y="421" width="4.4230%" height="15" fill="rgb(235,201,11)" fg:x="177" fg:w="133"/><text x="6.1363%" y="431.50">&lt;hash..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;bool&gt;&gt; (1 samples, 0.03%)</title><rect x="10.3093%" y="501" width="0.0333%" height="15" fill="rgb(207,46,11)" fg:x="310" fg:w="1"/><text x="10.5593%" y="511.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="10.3093%" y="485" width="0.0333%" height="15" fill="rgb(241,35,35)" fg:x="310" fg:w="1"/><text x="10.5593%" y="495.50"></text></g><g><title>std::sys::sync::mutex::pthread::Mutex::unlock (1 samples, 0.03%)</title><rect x="10.3093%" y="469" width="0.0333%" height="15" fill="rgb(243,32,47)" fg:x="310" fg:w="1"/><text x="10.5593%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::level::TransformComp&gt; (59 samples, 1.96%)</title><rect x="10.3425%" y="501" width="1.9621%" height="15" fill="rgb(247,202,23)" fg:x="311" fg:w="59"/><text x="10.5925%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[torpedo::level::Instant]&gt;&gt; (59 samples, 1.96%)</title><rect x="10.3425%" y="485" width="1.9621%" height="15" fill="rgb(219,102,11)" fg:x="311" fg:w="59"/><text x="10.5925%" y="495.50">c..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 1.96%)</title><rect x="10.3425%" y="469" width="1.9621%" height="15" fill="rgb(243,110,44)" fg:x="311" fg:w="59"/><text x="10.5925%" y="479.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59 samples, 1.96%)</title><rect x="10.3425%" y="453" width="1.9621%" height="15" fill="rgb(222,74,54)" fg:x="311" fg:w="59"/><text x="10.5925%" y="463.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (59 samples, 1.96%)</title><rect x="10.3425%" y="437" width="1.9621%" height="15" fill="rgb(216,99,12)" fg:x="311" fg:w="59"/><text x="10.5925%" y="447.50">a..</text></g><g><title>torpedo::physics::update (1 samples, 0.03%)</title><rect x="12.2714%" y="421" width="0.0333%" height="15" fill="rgb(226,22,26)" fg:x="369" fg:w="1"/><text x="12.5214%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::level::TransformComp&gt; (1 samples, 0.03%)</title><rect x="12.2714%" y="405" width="0.0333%" height="15" fill="rgb(217,163,10)" fg:x="369" fg:w="1"/><text x="12.5214%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[torpedo::level::Instant]&gt;&gt; (1 samples, 0.03%)</title><rect x="12.2714%" y="389" width="0.0333%" height="15" fill="rgb(213,25,53)" fg:x="369" fg:w="1"/><text x="12.5214%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="12.2714%" y="373" width="0.0333%" height="15" fill="rgb(252,105,26)" fg:x="369" fg:w="1"/><text x="12.5214%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="12.2714%" y="357" width="0.0333%" height="15" fill="rgb(220,39,43)" fg:x="369" fg:w="1"/><text x="12.5214%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="12.2714%" y="341" width="0.0333%" height="15" fill="rgb(229,68,48)" fg:x="369" fg:w="1"/><text x="12.5214%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.03%)</title><rect x="12.5042%" y="437" width="0.0333%" height="15" fill="rgb(252,8,32)" fg:x="376" fg:w="1"/><text x="12.7542%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.03%)</title><rect x="12.5042%" y="421" width="0.0333%" height="15" fill="rgb(223,20,43)" fg:x="376" fg:w="1"/><text x="12.7542%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.03%)</title><rect x="12.5042%" y="405" width="0.0333%" height="15" fill="rgb(229,81,49)" fg:x="376" fg:w="1"/><text x="12.7542%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (1 samples, 0.03%)</title><rect x="12.5042%" y="389" width="0.0333%" height="15" fill="rgb(236,28,36)" fg:x="376" fg:w="1"/><text x="12.7542%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;torpedo::physics::Collision&gt;&gt; (10 samples, 0.33%)</title><rect x="12.3046%" y="485" width="0.3326%" height="15" fill="rgb(249,185,26)" fg:x="370" fg:w="10"/><text x="12.5546%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;torpedo::physics::Collision&gt;&gt; (10 samples, 0.33%)</title><rect x="12.3046%" y="469" width="0.3326%" height="15" fill="rgb(249,174,33)" fg:x="370" fg:w="10"/><text x="12.5546%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.33%)</title><rect x="12.3046%" y="453" width="0.3326%" height="15" fill="rgb(233,201,37)" fg:x="370" fg:w="10"/><text x="12.5546%" y="463.50"></text></g><g><title>torpedo::physics::update (3 samples, 0.10%)</title><rect x="12.5374%" y="437" width="0.0998%" height="15" fill="rgb(221,78,26)" fg:x="377" fg:w="3"/><text x="12.7874%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::physics::PhysicsComp&gt; (3 samples, 0.10%)</title><rect x="12.5374%" y="421" width="0.0998%" height="15" fill="rgb(250,127,30)" fg:x="377" fg:w="3"/><text x="12.7874%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;torpedo::physics::Collision&gt;&gt; (3 samples, 0.10%)</title><rect x="12.5374%" y="405" width="0.0998%" height="15" fill="rgb(230,49,44)" fg:x="377" fg:w="3"/><text x="12.7874%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;torpedo::physics::Collision&gt;&gt; (3 samples, 0.10%)</title><rect x="12.5374%" y="389" width="0.0998%" height="15" fill="rgb(229,67,23)" fg:x="377" fg:w="3"/><text x="12.7874%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="12.5374%" y="373" width="0.0998%" height="15" fill="rgb(249,83,47)" fg:x="377" fg:w="3"/><text x="12.7874%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::physics::PhysicsComp&gt; (15 samples, 0.50%)</title><rect x="12.3046%" y="501" width="0.4988%" height="15" fill="rgb(215,43,3)" fg:x="370" fg:w="15"/><text x="12.5546%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt; (5 samples, 0.17%)</title><rect x="12.6372%" y="485" width="0.1663%" height="15" fill="rgb(238,154,13)" fg:x="380" fg:w="5"/><text x="12.8872%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,std::hash::random::RandomState&gt;&gt; (5 samples, 0.17%)</title><rect x="12.6372%" y="469" width="0.1663%" height="15" fill="rgb(219,56,2)" fg:x="380" fg:w="5"/><text x="12.8872%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (5 samples, 0.17%)</title><rect x="12.6372%" y="453" width="0.1663%" height="15" fill="rgb(233,0,4)" fg:x="380" fg:w="5"/><text x="12.8872%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="12.6372%" y="437" width="0.1663%" height="15" fill="rgb(235,30,7)" fg:x="380" fg:w="5"/><text x="12.8872%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 1.60%)</title><rect x="12.8035%" y="421" width="1.5963%" height="15" fill="rgb(250,79,13)" fg:x="385" fg:w="48"/><text x="13.0535%" y="431.50"></text></g><g><title>&lt;torpedo::level::TransformComp as core::clone::Clone&gt;::clone (48 samples, 1.60%)</title><rect x="12.8035%" y="405" width="1.5963%" height="15" fill="rgb(211,146,34)" fg:x="385" fg:w="48"/><text x="13.0535%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.13%)</title><rect x="14.2667%" y="389" width="0.1330%" height="15" fill="rgb(228,22,38)" fg:x="429" fg:w="4"/><text x="14.5167%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.13%)</title><rect x="14.2667%" y="373" width="0.1330%" height="15" fill="rgb(235,168,5)" fg:x="429" fg:w="4"/><text x="14.5167%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.13%)</title><rect x="14.2667%" y="357" width="0.1330%" height="15" fill="rgb(221,155,16)" fg:x="429" fg:w="4"/><text x="14.5167%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.13%)</title><rect x="14.2667%" y="341" width="0.1330%" height="15" fill="rgb(215,215,53)" fg:x="429" fg:w="4"/><text x="14.5167%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.13%)</title><rect x="14.2667%" y="325" width="0.1330%" height="15" fill="rgb(223,4,10)" fg:x="429" fg:w="4"/><text x="14.5167%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.13%)</title><rect x="14.2667%" y="309" width="0.1330%" height="15" fill="rgb(234,103,6)" fg:x="429" fg:w="4"/><text x="14.5167%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.20%)</title><rect x="14.3997%" y="261" width="0.1995%" height="15" fill="rgb(227,97,0)" fg:x="433" fg:w="6"/><text x="14.6497%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.20%)</title><rect x="14.3997%" y="245" width="0.1995%" height="15" fill="rgb(234,150,53)" fg:x="433" fg:w="6"/><text x="14.6497%" y="255.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.20%)</title><rect x="14.3997%" y="229" width="0.1995%" height="15" fill="rgb(228,201,54)" fg:x="433" fg:w="6"/><text x="14.6497%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.23%)</title><rect x="14.3997%" y="389" width="0.2328%" height="15" fill="rgb(222,22,37)" fg:x="433" fg:w="7"/><text x="14.6497%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.23%)</title><rect x="14.3997%" y="373" width="0.2328%" height="15" fill="rgb(237,53,32)" fg:x="433" fg:w="7"/><text x="14.6497%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.23%)</title><rect x="14.3997%" y="357" width="0.2328%" height="15" fill="rgb(233,25,53)" fg:x="433" fg:w="7"/><text x="14.6497%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.23%)</title><rect x="14.3997%" y="341" width="0.2328%" height="15" fill="rgb(210,40,34)" fg:x="433" fg:w="7"/><text x="14.6497%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="14.3997%" y="325" width="0.2328%" height="15" fill="rgb(241,220,44)" fg:x="433" fg:w="7"/><text x="14.6497%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="14.3997%" y="309" width="0.2328%" height="15" fill="rgb(235,28,35)" fg:x="433" fg:w="7"/><text x="14.6497%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="14.3997%" y="293" width="0.2328%" height="15" fill="rgb(210,56,17)" fg:x="433" fg:w="7"/><text x="14.6497%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7 samples, 0.23%)</title><rect x="14.3997%" y="277" width="0.2328%" height="15" fill="rgb(224,130,29)" fg:x="433" fg:w="7"/><text x="14.6497%" y="287.50"></text></g><g><title>alloc::raw_vec::layout_array (1 samples, 0.03%)</title><rect x="14.5993%" y="261" width="0.0333%" height="15" fill="rgb(235,212,8)" fg:x="439" fg:w="1"/><text x="14.8493%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.03%)</title><rect x="14.5993%" y="245" width="0.0333%" height="15" fill="rgb(223,33,50)" fg:x="439" fg:w="1"/><text x="14.8493%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (1 samples, 0.03%)</title><rect x="14.5993%" y="229" width="0.0333%" height="15" fill="rgb(219,149,13)" fg:x="439" fg:w="1"/><text x="14.8493%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.03%)</title><rect x="14.5993%" y="213" width="0.0333%" height="15" fill="rgb(250,156,29)" fg:x="439" fg:w="1"/><text x="14.8493%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (1 samples, 0.03%)</title><rect x="14.5993%" y="197" width="0.0333%" height="15" fill="rgb(216,193,19)" fg:x="439" fg:w="1"/><text x="14.8493%" y="207.50"></text></g><g><title>core::clone::Clone::clone_from (8 samples, 0.27%)</title><rect x="14.3997%" y="421" width="0.2660%" height="15" fill="rgb(216,135,14)" fg:x="433" fg:w="8"/><text x="14.6497%" y="431.50"></text></g><g><title>&lt;torpedo::physics::PhysicsComp as core::clone::Clone&gt;::clone (8 samples, 0.27%)</title><rect x="14.3997%" y="405" width="0.2660%" height="15" fill="rgb(241,47,5)" fg:x="433" fg:w="8"/><text x="14.6497%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="14.6325%" y="389" width="0.0333%" height="15" fill="rgb(233,42,35)" fg:x="440" fg:w="1"/><text x="14.8825%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="14.6325%" y="373" width="0.0333%" height="15" fill="rgb(231,13,6)" fg:x="440" fg:w="1"/><text x="14.8825%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;torpedo::physics::Collision&gt;&gt; (29 samples, 0.96%)</title><rect x="14.6658%" y="389" width="0.9644%" height="15" fill="rgb(207,181,40)" fg:x="441" fg:w="29"/><text x="14.9158%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;torpedo::physics::Collision&gt;&gt; (29 samples, 0.96%)</title><rect x="14.6658%" y="373" width="0.9644%" height="15" fill="rgb(254,173,49)" fg:x="441" fg:w="29"/><text x="14.9158%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.96%)</title><rect x="14.6658%" y="357" width="0.9644%" height="15" fill="rgb(221,1,38)" fg:x="441" fg:w="29"/><text x="14.9158%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (23 samples, 0.76%)</title><rect x="14.8653%" y="341" width="0.7649%" height="15" fill="rgb(206,124,46)" fg:x="447" fg:w="23"/><text x="15.1153%" y="351.50"></text></g><g><title>&lt;[T] as core::slice::CloneFromSpec&lt;T&gt;&gt;::spec_clone_from (23 samples, 0.76%)</title><rect x="14.8653%" y="325" width="0.7649%" height="15" fill="rgb(249,21,11)" fg:x="447" fg:w="23"/><text x="15.1153%" y="335.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone_from (23 samples, 0.76%)</title><rect x="14.8653%" y="309" width="0.7649%" height="15" fill="rgb(222,201,40)" fg:x="447" fg:w="23"/><text x="15.1153%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;torpedo::physics::PhysicsComp&gt;&gt; (23 samples, 0.76%)</title><rect x="14.8653%" y="293" width="0.7649%" height="15" fill="rgb(235,61,29)" fg:x="447" fg:w="23"/><text x="15.1153%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::physics::PhysicsComp&gt; (23 samples, 0.76%)</title><rect x="14.8653%" y="277" width="0.7649%" height="15" fill="rgb(219,207,3)" fg:x="447" fg:w="23"/><text x="15.1153%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;torpedo::physics::Collision&gt;&gt; (23 samples, 0.76%)</title><rect x="14.8653%" y="261" width="0.7649%" height="15" fill="rgb(222,56,46)" fg:x="447" fg:w="23"/><text x="15.1153%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;torpedo::physics::Collision&gt;&gt; (23 samples, 0.76%)</title><rect x="14.8653%" y="245" width="0.7649%" height="15" fill="rgb(239,76,54)" fg:x="447" fg:w="23"/><text x="15.1153%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.76%)</title><rect x="14.8653%" y="229" width="0.7649%" height="15" fill="rgb(231,124,27)" fg:x="447" fg:w="23"/><text x="15.1153%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (267 samples, 8.88%)</title><rect x="12.8035%" y="469" width="8.8793%" height="15" fill="rgb(249,195,6)" fg:x="385" fg:w="267"/><text x="13.0535%" y="479.50">core::slice::..</text></g><g><title>&lt;[T] as core::slice::CloneFromSpec&lt;T&gt;&gt;::spec_clone_from (267 samples, 8.88%)</title><rect x="12.8035%" y="453" width="8.8793%" height="15" fill="rgb(237,174,47)" fg:x="385" fg:w="267"/><text x="13.0535%" y="463.50">&lt;[T] as core:..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone_from (267 samples, 8.88%)</title><rect x="12.8035%" y="437" width="8.8793%" height="15" fill="rgb(206,201,31)" fg:x="385" fg:w="267"/><text x="13.0535%" y="447.50">&lt;core::option..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;torpedo::physics::PhysicsComp&gt;&gt; (211 samples, 7.02%)</title><rect x="14.6658%" y="421" width="7.0170%" height="15" fill="rgb(231,57,52)" fg:x="441" fg:w="211"/><text x="14.9158%" y="431.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;torpedo::physics::PhysicsComp&gt; (211 samples, 7.02%)</title><rect x="14.6658%" y="405" width="7.0170%" height="15" fill="rgb(248,177,22)" fg:x="441" fg:w="211"/><text x="14.9158%" y="415.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt; (182 samples, 6.05%)</title><rect x="15.6302%" y="389" width="6.0525%" height="15" fill="rgb(215,211,37)" fg:x="470" fg:w="182"/><text x="15.8802%" y="399.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,std::hash::random::RandomState&gt;&gt; (182 samples, 6.05%)</title><rect x="15.6302%" y="373" width="6.0525%" height="15" fill="rgb(241,128,51)" fg:x="470" fg:w="182"/><text x="15.8802%" y="383.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (182 samples, 6.05%)</title><rect x="15.6302%" y="357" width="6.0525%" height="15" fill="rgb(227,165,31)" fg:x="470" fg:w="182"/><text x="15.8802%" y="367.50">core::pt..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (182 samples, 6.05%)</title><rect x="15.6302%" y="341" width="6.0525%" height="15" fill="rgb(228,167,24)" fg:x="470" fg:w="182"/><text x="15.8802%" y="351.50">&lt;hashbro..</text></g><g><title>core::slice::&lt;impl [T]&gt;::clone_from_slice (18 samples, 0.60%)</title><rect x="21.0841%" y="325" width="0.5986%" height="15" fill="rgb(228,143,12)" fg:x="634" fg:w="18"/><text x="21.3341%" y="335.50"></text></g><g><title>&lt;[T] as core::slice::CloneFromSpec&lt;T&gt;&gt;::spec_clone_from (18 samples, 0.60%)</title><rect x="21.0841%" y="309" width="0.5986%" height="15" fill="rgb(249,149,8)" fg:x="634" fg:w="18"/><text x="21.3341%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone_from (18 samples, 0.60%)</title><rect x="21.0841%" y="293" width="0.5986%" height="15" fill="rgb(243,35,44)" fg:x="634" fg:w="18"/><text x="21.3341%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;torpedo::physics::PhysicsComp&gt;&gt; (18 samples, 0.60%)</title><rect x="21.0841%" y="277" width="0.5986%" height="15" fill="rgb(246,89,9)" fg:x="634" fg:w="18"/><text x="21.3341%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::physics::PhysicsComp&gt; (18 samples, 0.60%)</title><rect x="21.0841%" y="261" width="0.5986%" height="15" fill="rgb(233,213,13)" fg:x="634" fg:w="18"/><text x="21.3341%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,usize&gt;&gt; (18 samples, 0.60%)</title><rect x="21.0841%" y="245" width="0.5986%" height="15" fill="rgb(233,141,41)" fg:x="634" fg:w="18"/><text x="21.3341%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,usize,std::hash::random::RandomState&gt;&gt; (18 samples, 0.60%)</title><rect x="21.0841%" y="229" width="0.5986%" height="15" fill="rgb(239,167,4)" fg:x="634" fg:w="18"/><text x="21.3341%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,usize)&gt;&gt; (18 samples, 0.60%)</title><rect x="21.0841%" y="213" width="0.5986%" height="15" fill="rgb(209,217,16)" fg:x="634" fg:w="18"/><text x="21.3341%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.60%)</title><rect x="21.0841%" y="197" width="0.5986%" height="15" fill="rgb(219,88,35)" fg:x="634" fg:w="18"/><text x="21.3341%" y="207.50"></text></g><g><title>torpedo::arena::ArenaInternal::alloc_bytes (17 samples, 0.57%)</title><rect x="21.6827%" y="469" width="0.5653%" height="15" fill="rgb(220,193,23)" fg:x="652" fg:w="17"/><text x="21.9327%" y="479.50"></text></g><g><title>torpedo::arena::Arena::alloc_array_no_destructor (285 samples, 9.48%)</title><rect x="12.8035%" y="501" width="9.4779%" height="15" fill="rgb(230,90,52)" fg:x="385" fg:w="285"/><text x="13.0535%" y="511.50">torpedo::arena..</text></g><g><title>torpedo::arena::ArenaInternal::alloc_array (285 samples, 9.48%)</title><rect x="12.8035%" y="485" width="9.4779%" height="15" fill="rgb(252,106,19)" fg:x="385" fg:w="285"/><text x="13.0535%" y="495.50">torpedo::arena..</text></g><g><title>torpedo::physics::update (1 samples, 0.03%)</title><rect x="22.2481%" y="469" width="0.0333%" height="15" fill="rgb(206,74,20)" fg:x="669" fg:w="1"/><text x="22.4981%" y="479.50"></text></g><g><title>torpedo::arena::Arena::alloc_array_no_destructor (1 samples, 0.03%)</title><rect x="22.2481%" y="453" width="0.0333%" height="15" fill="rgb(230,138,44)" fg:x="669" fg:w="1"/><text x="22.4981%" y="463.50"></text></g><g><title>torpedo::arena::ArenaInternal::alloc_array (1 samples, 0.03%)</title><rect x="22.2481%" y="437" width="0.0333%" height="15" fill="rgb(235,182,43)" fg:x="669" fg:w="1"/><text x="22.4981%" y="447.50"></text></g><g><title>torpedo::arena::Arena::reset (1 samples, 0.03%)</title><rect x="22.2813%" y="501" width="0.0333%" height="15" fill="rgb(242,16,51)" fg:x="670" fg:w="1"/><text x="22.5313%" y="511.50"></text></g><g><title>torpedo::arena::Arena::unlock (1 samples, 0.03%)</title><rect x="22.2813%" y="485" width="0.0333%" height="15" fill="rgb(248,9,4)" fg:x="670" fg:w="1"/><text x="22.5313%" y="495.50"></text></g><g><title>torpedo::level::TransformComp::update (3 samples, 0.10%)</title><rect x="22.3146%" y="501" width="0.0998%" height="15" fill="rgb(210,31,22)" fg:x="671" fg:w="3"/><text x="22.5646%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.20%)</title><rect x="22.4809%" y="485" width="0.1995%" height="15" fill="rgb(239,54,39)" fg:x="676" fg:w="6"/><text x="22.7309%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.20%)</title><rect x="22.4809%" y="469" width="0.1995%" height="15" fill="rgb(230,99,41)" fg:x="676" fg:w="6"/><text x="22.7309%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (6 samples, 0.20%)</title><rect x="22.4809%" y="453" width="0.1995%" height="15" fill="rgb(253,106,12)" fg:x="676" fg:w="6"/><text x="22.7309%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (6 samples, 0.20%)</title><rect x="22.4809%" y="437" width="0.1995%" height="15" fill="rgb(213,46,41)" fg:x="676" fg:w="6"/><text x="22.7309%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6 samples, 0.20%)</title><rect x="22.4809%" y="421" width="0.1995%" height="15" fill="rgb(215,133,35)" fg:x="676" fg:w="6"/><text x="22.7309%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.17%)</title><rect x="22.5141%" y="405" width="0.1663%" height="15" fill="rgb(213,28,5)" fg:x="677" fg:w="5"/><text x="22.7641%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt; (5 samples, 0.17%)</title><rect x="22.6804%" y="485" width="0.1663%" height="15" fill="rgb(215,77,49)" fg:x="682" fg:w="5"/><text x="22.9304%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="22.6804%" y="469" width="0.1663%" height="15" fill="rgb(248,100,22)" fg:x="682" fg:w="5"/><text x="22.9304%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;[usize],alloc::alloc::Global&gt;&gt; (5 samples, 0.17%)</title><rect x="22.6804%" y="453" width="0.1663%" height="15" fill="rgb(208,67,9)" fg:x="682" fg:w="5"/><text x="22.9304%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="22.6804%" y="437" width="0.1663%" height="15" fill="rgb(219,133,21)" fg:x="682" fg:w="5"/><text x="22.9304%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;[usize]&gt;&gt; (5 samples, 0.17%)</title><rect x="22.6804%" y="421" width="0.1663%" height="15" fill="rgb(246,46,29)" fg:x="682" fg:w="5"/><text x="22.9304%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="22.6804%" y="405" width="0.1663%" height="15" fill="rgb(246,185,52)" fg:x="682" fg:w="5"/><text x="22.9304%" y="415.50"></text></g><g><title>torpedo::physics::Octree::query_box (3 samples, 0.10%)</title><rect x="22.7469%" y="389" width="0.0998%" height="15" fill="rgb(252,136,11)" fg:x="684" fg:w="3"/><text x="22.9969%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt; (3 samples, 0.10%)</title><rect x="22.7469%" y="373" width="0.0998%" height="15" fill="rgb(219,138,53)" fg:x="684" fg:w="3"/><text x="22.9969%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="22.7469%" y="357" width="0.0998%" height="15" fill="rgb(211,51,23)" fg:x="684" fg:w="3"/><text x="22.9969%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;[usize],alloc::alloc::Global&gt;&gt; (3 samples, 0.10%)</title><rect x="22.7469%" y="341" width="0.0998%" height="15" fill="rgb(247,221,28)" fg:x="684" fg:w="3"/><text x="22.9969%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="22.7469%" y="325" width="0.0998%" height="15" fill="rgb(251,222,45)" fg:x="684" fg:w="3"/><text x="22.9969%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;[usize]&gt;&gt; (3 samples, 0.10%)</title><rect x="22.7469%" y="309" width="0.0998%" height="15" fill="rgb(217,162,53)" fg:x="684" fg:w="3"/><text x="22.9969%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="22.7469%" y="293" width="0.0998%" height="15" fill="rgb(229,93,14)" fg:x="684" fg:w="3"/><text x="22.9969%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="22.8467%" y="469" width="0.0333%" height="15" fill="rgb(209,67,49)" fg:x="687" fg:w="1"/><text x="23.0967%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="22.8467%" y="453" width="0.0333%" height="15" fill="rgb(213,87,29)" fg:x="687" fg:w="1"/><text x="23.0967%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="22.8467%" y="437" width="0.0333%" height="15" fill="rgb(205,151,52)" fg:x="687" fg:w="1"/><text x="23.0967%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="22.8467%" y="421" width="0.0333%" height="15" fill="rgb(253,215,39)" fg:x="687" fg:w="1"/><text x="23.0967%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.20%)</title><rect x="22.8799%" y="469" width="0.1995%" height="15" fill="rgb(221,220,41)" fg:x="688" fg:w="6"/><text x="23.1299%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.20%)</title><rect x="22.8799%" y="453" width="0.1995%" height="15" fill="rgb(218,133,21)" fg:x="688" fg:w="6"/><text x="23.1299%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (6 samples, 0.20%)</title><rect x="22.8799%" y="437" width="0.1995%" height="15" fill="rgb(221,193,43)" fg:x="688" fg:w="6"/><text x="23.1299%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (6 samples, 0.20%)</title><rect x="22.8799%" y="421" width="0.1995%" height="15" fill="rgb(240,128,52)" fg:x="688" fg:w="6"/><text x="23.1299%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6 samples, 0.20%)</title><rect x="22.8799%" y="405" width="0.1995%" height="15" fill="rgb(253,114,12)" fg:x="688" fg:w="6"/><text x="23.1299%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.20%)</title><rect x="22.8799%" y="389" width="0.1995%" height="15" fill="rgb(215,223,47)" fg:x="688" fg:w="6"/><text x="23.1299%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt; (6 samples, 0.20%)</title><rect x="23.0795%" y="469" width="0.1995%" height="15" fill="rgb(248,225,23)" fg:x="694" fg:w="6"/><text x="23.3295%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.20%)</title><rect x="23.0795%" y="453" width="0.1995%" height="15" fill="rgb(250,108,0)" fg:x="694" fg:w="6"/><text x="23.3295%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;[usize],alloc::alloc::Global&gt;&gt; (6 samples, 0.20%)</title><rect x="23.0795%" y="437" width="0.1995%" height="15" fill="rgb(228,208,7)" fg:x="694" fg:w="6"/><text x="23.3295%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.20%)</title><rect x="23.0795%" y="421" width="0.1995%" height="15" fill="rgb(244,45,10)" fg:x="694" fg:w="6"/><text x="23.3295%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;[usize]&gt;&gt; (6 samples, 0.20%)</title><rect x="23.0795%" y="405" width="0.1995%" height="15" fill="rgb(207,125,25)" fg:x="694" fg:w="6"/><text x="23.3295%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.20%)</title><rect x="23.0795%" y="389" width="0.1995%" height="15" fill="rgb(210,195,18)" fg:x="694" fg:w="6"/><text x="23.3295%" y="399.50"></text></g><g><title>torpedo::physics::Octree::query_box (3 samples, 0.10%)</title><rect x="23.1792%" y="373" width="0.0998%" height="15" fill="rgb(249,80,12)" fg:x="697" fg:w="3"/><text x="23.4292%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt; (3 samples, 0.10%)</title><rect x="23.1792%" y="357" width="0.0998%" height="15" fill="rgb(221,65,9)" fg:x="697" fg:w="3"/><text x="23.4292%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="23.1792%" y="341" width="0.0998%" height="15" fill="rgb(235,49,36)" fg:x="697" fg:w="3"/><text x="23.4292%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;[usize],alloc::alloc::Global&gt;&gt; (3 samples, 0.10%)</title><rect x="23.1792%" y="325" width="0.0998%" height="15" fill="rgb(225,32,20)" fg:x="697" fg:w="3"/><text x="23.4292%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="23.1792%" y="309" width="0.0998%" height="15" fill="rgb(215,141,46)" fg:x="697" fg:w="3"/><text x="23.4292%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;[usize]&gt;&gt; (3 samples, 0.10%)</title><rect x="23.1792%" y="293" width="0.0998%" height="15" fill="rgb(250,160,47)" fg:x="697" fg:w="3"/><text x="23.4292%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="23.1792%" y="277" width="0.0998%" height="15" fill="rgb(216,222,40)" fg:x="697" fg:w="3"/><text x="23.4292%" y="287.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.07%)</title><rect x="23.3123%" y="453" width="0.0665%" height="15" fill="rgb(234,217,39)" fg:x="701" fg:w="2"/><text x="23.5623%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="23.3123%" y="437" width="0.0665%" height="15" fill="rgb(207,178,40)" fg:x="701" fg:w="2"/><text x="23.5623%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="23.3123%" y="421" width="0.0665%" height="15" fill="rgb(221,136,13)" fg:x="701" fg:w="2"/><text x="23.5623%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="23.3123%" y="405" width="0.0665%" height="15" fill="rgb(249,199,10)" fg:x="701" fg:w="2"/><text x="23.5623%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.33%)</title><rect x="23.3788%" y="453" width="0.3326%" height="15" fill="rgb(249,222,13)" fg:x="703" fg:w="10"/><text x="23.6288%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.33%)</title><rect x="23.3788%" y="437" width="0.3326%" height="15" fill="rgb(244,185,38)" fg:x="703" fg:w="10"/><text x="23.6288%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (10 samples, 0.33%)</title><rect x="23.3788%" y="421" width="0.3326%" height="15" fill="rgb(236,202,9)" fg:x="703" fg:w="10"/><text x="23.6288%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (10 samples, 0.33%)</title><rect x="23.3788%" y="405" width="0.3326%" height="15" fill="rgb(250,229,37)" fg:x="703" fg:w="10"/><text x="23.6288%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (10 samples, 0.33%)</title><rect x="23.3788%" y="389" width="0.3326%" height="15" fill="rgb(206,174,23)" fg:x="703" fg:w="10"/><text x="23.6288%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.30%)</title><rect x="23.4120%" y="373" width="0.2993%" height="15" fill="rgb(211,33,43)" fg:x="704" fg:w="9"/><text x="23.6620%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1 samples, 0.03%)</title><rect x="23.9109%" y="357" width="0.0333%" height="15" fill="rgb(245,58,50)" fg:x="719" fg:w="1"/><text x="24.1609%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1 samples, 0.03%)</title><rect x="23.9109%" y="341" width="0.0333%" height="15" fill="rgb(244,68,36)" fg:x="719" fg:w="1"/><text x="24.1609%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.03%)</title><rect x="23.9109%" y="325" width="0.0333%" height="15" fill="rgb(232,229,15)" fg:x="719" fg:w="1"/><text x="24.1609%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (1 samples, 0.03%)</title><rect x="23.9109%" y="309" width="0.0333%" height="15" fill="rgb(254,30,23)" fg:x="719" fg:w="1"/><text x="24.1609%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt; (14 samples, 0.47%)</title><rect x="23.7113%" y="453" width="0.4656%" height="15" fill="rgb(235,160,14)" fg:x="713" fg:w="14"/><text x="23.9613%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.47%)</title><rect x="23.7113%" y="437" width="0.4656%" height="15" fill="rgb(212,155,44)" fg:x="713" fg:w="14"/><text x="23.9613%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;[usize],alloc::alloc::Global&gt;&gt; (14 samples, 0.47%)</title><rect x="23.7113%" y="421" width="0.4656%" height="15" fill="rgb(226,2,50)" fg:x="713" fg:w="14"/><text x="23.9613%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.47%)</title><rect x="23.7113%" y="405" width="0.4656%" height="15" fill="rgb(234,177,6)" fg:x="713" fg:w="14"/><text x="23.9613%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;[usize]&gt;&gt; (14 samples, 0.47%)</title><rect x="23.7113%" y="389" width="0.4656%" height="15" fill="rgb(217,24,9)" fg:x="713" fg:w="14"/><text x="23.9613%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.47%)</title><rect x="23.7113%" y="373" width="0.4656%" height="15" fill="rgb(220,13,46)" fg:x="713" fg:w="14"/><text x="23.9613%" y="383.50"></text></g><g><title>torpedo::physics::Octree::query_box (7 samples, 0.23%)</title><rect x="23.9441%" y="357" width="0.2328%" height="15" fill="rgb(239,221,27)" fg:x="720" fg:w="7"/><text x="24.1941%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;[usize]&gt;&gt; (7 samples, 0.23%)</title><rect x="23.9441%" y="341" width="0.2328%" height="15" fill="rgb(222,198,25)" fg:x="720" fg:w="7"/><text x="24.1941%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.23%)</title><rect x="23.9441%" y="325" width="0.2328%" height="15" fill="rgb(211,99,13)" fg:x="720" fg:w="7"/><text x="24.1941%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;[usize],alloc::alloc::Global&gt;&gt; (7 samples, 0.23%)</title><rect x="23.9441%" y="309" width="0.2328%" height="15" fill="rgb(232,111,31)" fg:x="720" fg:w="7"/><text x="24.1941%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.23%)</title><rect x="23.9441%" y="293" width="0.2328%" height="15" fill="rgb(245,82,37)" fg:x="720" fg:w="7"/><text x="24.1941%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;[usize]&gt;&gt; (7 samples, 0.23%)</title><rect x="23.9441%" y="277" width="0.2328%" height="15" fill="rgb(227,149,46)" fg:x="720" fg:w="7"/><text x="24.1941%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.23%)</title><rect x="23.9441%" y="261" width="0.2328%" height="15" fill="rgb(218,36,50)" fg:x="720" fg:w="7"/><text x="24.1941%" y="271.50"></text></g><g><title>torpedo::math::BoundingBox::check_collision (2 samples, 0.07%)</title><rect x="24.1769%" y="453" width="0.0665%" height="15" fill="rgb(226,80,48)" fg:x="727" fg:w="2"/><text x="24.4269%" y="463.50"></text></g><g><title>raylib::core::collision::&lt;impl raylib::core::math::BoundingBox&gt;::check_collision_boxes (2 samples, 0.07%)</title><rect x="24.1769%" y="437" width="0.0665%" height="15" fill="rgb(238,224,15)" fg:x="727" fg:w="2"/><text x="24.4269%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.17%)</title><rect x="24.2434%" y="437" width="0.1663%" height="15" fill="rgb(241,136,10)" fg:x="729" fg:w="5"/><text x="24.4934%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.17%)</title><rect x="24.2434%" y="421" width="0.1663%" height="15" fill="rgb(208,32,45)" fg:x="729" fg:w="5"/><text x="24.4934%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.17%)</title><rect x="24.2434%" y="405" width="0.1663%" height="15" fill="rgb(207,135,9)" fg:x="729" fg:w="5"/><text x="24.4934%" y="415.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.17%)</title><rect x="24.2434%" y="389" width="0.1663%" height="15" fill="rgb(206,86,44)" fg:x="729" fg:w="5"/><text x="24.4934%" y="399.50"></text></g><g><title>torpedo::physics::Octree::query_box (1 samples, 0.03%)</title><rect x="24.3765%" y="373" width="0.0333%" height="15" fill="rgb(245,177,15)" fg:x="733" fg:w="1"/><text x="24.6265%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.03%)</title><rect x="24.3765%" y="357" width="0.0333%" height="15" fill="rgb(206,64,50)" fg:x="733" fg:w="1"/><text x="24.6265%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="24.3765%" y="341" width="0.0333%" height="15" fill="rgb(234,36,40)" fg:x="733" fg:w="1"/><text x="24.6265%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="24.3765%" y="325" width="0.0333%" height="15" fill="rgb(213,64,8)" fg:x="733" fg:w="1"/><text x="24.6265%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="24.3765%" y="309" width="0.0333%" height="15" fill="rgb(210,75,36)" fg:x="733" fg:w="1"/><text x="24.6265%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="24.4097%" y="437" width="0.0333%" height="15" fill="rgb(229,88,21)" fg:x="734" fg:w="1"/><text x="24.6597%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="24.4097%" y="421" width="0.0333%" height="15" fill="rgb(252,204,47)" fg:x="734" fg:w="1"/><text x="24.6597%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1 samples, 0.03%)</title><rect x="24.4097%" y="405" width="0.0333%" height="15" fill="rgb(208,77,27)" fg:x="734" fg:w="1"/><text x="24.6597%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="24.4097%" y="389" width="0.0333%" height="15" fill="rgb(221,76,26)" fg:x="734" fg:w="1"/><text x="24.6597%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="24.4097%" y="373" width="0.0333%" height="15" fill="rgb(225,139,18)" fg:x="734" fg:w="1"/><text x="24.6597%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="24.4097%" y="357" width="0.0333%" height="15" fill="rgb(230,137,11)" fg:x="734" fg:w="1"/><text x="24.6597%" y="367.50"></text></g><g><title>torpedo::physics::Octree::query_box (63 samples, 2.10%)</title><rect x="22.4144%" y="501" width="2.0951%" height="15" fill="rgb(212,28,1)" fg:x="674" fg:w="63"/><text x="22.6644%" y="511.50">t..</text></g><g><title>torpedo::physics::Octree::query_box (50 samples, 1.66%)</title><rect x="22.8467%" y="485" width="1.6628%" height="15" fill="rgb(248,164,17)" fg:x="687" fg:w="50"/><text x="23.0967%" y="495.50"></text></g><g><title>torpedo::physics::Octree::query_box (37 samples, 1.23%)</title><rect x="23.2790%" y="469" width="1.2305%" height="15" fill="rgb(222,171,42)" fg:x="700" fg:w="37"/><text x="23.5290%" y="479.50"></text></g><g><title>torpedo::physics::Octree::query_box (8 samples, 0.27%)</title><rect x="24.2434%" y="453" width="0.2660%" height="15" fill="rgb(243,84,45)" fg:x="729" fg:w="8"/><text x="24.4934%" y="463.50"></text></g><g><title>torpedo::physics::Octree::query_box (2 samples, 0.07%)</title><rect x="24.4430%" y="437" width="0.0665%" height="15" fill="rgb(252,49,23)" fg:x="735" fg:w="2"/><text x="24.6930%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.07%)</title><rect x="24.4430%" y="421" width="0.0665%" height="15" fill="rgb(215,19,7)" fg:x="735" fg:w="2"/><text x="24.6930%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.07%)</title><rect x="24.4430%" y="405" width="0.0665%" height="15" fill="rgb(238,81,41)" fg:x="735" fg:w="2"/><text x="24.6930%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.07%)</title><rect x="24.4430%" y="389" width="0.0665%" height="15" fill="rgb(210,199,37)" fg:x="735" fg:w="2"/><text x="24.6930%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.07%)</title><rect x="24.4430%" y="373" width="0.0665%" height="15" fill="rgb(244,192,49)" fg:x="735" fg:w="2"/><text x="24.6930%" y="383.50"></text></g><g><title>torpedo::physics::PhysicsComp::max (8 samples, 0.27%)</title><rect x="24.5095%" y="485" width="0.2660%" height="15" fill="rgb(226,211,11)" fg:x="737" fg:w="8"/><text x="24.7595%" y="495.50"></text></g><g><title>torpedo::physics::Collision::max (8 samples, 0.27%)</title><rect x="24.5095%" y="469" width="0.2660%" height="15" fill="rgb(236,162,54)" fg:x="737" fg:w="8"/><text x="24.7595%" y="479.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (8 samples, 0.27%)</title><rect x="24.5095%" y="453" width="0.2660%" height="15" fill="rgb(220,229,9)" fg:x="737" fg:w="8"/><text x="24.7595%" y="463.50"></text></g><g><title>torpedo::physics::PhysicsComp::bb (12 samples, 0.40%)</title><rect x="24.5095%" y="501" width="0.3991%" height="15" fill="rgb(250,87,22)" fg:x="737" fg:w="12"/><text x="24.7595%" y="511.50"></text></g><g><title>torpedo::physics::PhysicsComp::min (4 samples, 0.13%)</title><rect x="24.7755%" y="485" width="0.1330%" height="15" fill="rgb(239,43,17)" fg:x="745" fg:w="4"/><text x="25.0255%" y="495.50"></text></g><g><title>torpedo::physics::Collision::max (4 samples, 0.13%)</title><rect x="24.7755%" y="469" width="0.1330%" height="15" fill="rgb(231,177,25)" fg:x="745" fg:w="4"/><text x="25.0255%" y="479.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (4 samples, 0.13%)</title><rect x="24.7755%" y="453" width="0.1330%" height="15" fill="rgb(219,179,1)" fg:x="745" fg:w="4"/><text x="25.0255%" y="463.50"></text></g><g><title>torpedo::physics::PhysicsComp::gamma (1 samples, 0.03%)</title><rect x="24.9085%" y="501" width="0.0333%" height="15" fill="rgb(238,219,53)" fg:x="749" fg:w="1"/><text x="25.1585%" y="511.50"></text></g><g><title>torpedo::physics::get_physics_comp (1 samples, 0.03%)</title><rect x="24.9085%" y="485" width="0.0333%" height="15" fill="rgb(232,167,36)" fg:x="749" fg:w="1"/><text x="25.1585%" y="495.50"></text></g><g><title>torpedo::physics::get_physics_comp (1 samples, 0.03%)</title><rect x="24.9085%" y="469" width="0.0333%" height="15" fill="rgb(244,19,51)" fg:x="749" fg:w="1"/><text x="25.1585%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.63%)</title><rect x="25.1413%" y="341" width="0.6319%" height="15" fill="rgb(224,6,22)" fg:x="756" fg:w="19"/><text x="25.3913%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.63%)</title><rect x="25.1413%" y="325" width="0.6319%" height="15" fill="rgb(224,145,5)" fg:x="756" fg:w="19"/><text x="25.3913%" y="335.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.63%)</title><rect x="25.1413%" y="309" width="0.6319%" height="15" fill="rgb(234,130,49)" fg:x="756" fg:w="19"/><text x="25.3913%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.70%)</title><rect x="25.1413%" y="405" width="0.6984%" height="15" fill="rgb(254,6,2)" fg:x="756" fg:w="21"/><text x="25.3913%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.70%)</title><rect x="25.1413%" y="389" width="0.6984%" height="15" fill="rgb(208,96,46)" fg:x="756" fg:w="21"/><text x="25.3913%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (21 samples, 0.70%)</title><rect x="25.1413%" y="373" width="0.6984%" height="15" fill="rgb(239,3,39)" fg:x="756" fg:w="21"/><text x="25.3913%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (21 samples, 0.70%)</title><rect x="25.1413%" y="357" width="0.6984%" height="15" fill="rgb(233,210,1)" fg:x="756" fg:w="21"/><text x="25.3913%" y="367.50"></text></g><g><title>alloc::raw_vec::layout_array (2 samples, 0.07%)</title><rect x="25.7732%" y="341" width="0.0665%" height="15" fill="rgb(244,137,37)" fg:x="775" fg:w="2"/><text x="26.0232%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2 samples, 0.07%)</title><rect x="25.7732%" y="325" width="0.0665%" height="15" fill="rgb(240,136,2)" fg:x="775" fg:w="2"/><text x="26.0232%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (2 samples, 0.07%)</title><rect x="25.7732%" y="309" width="0.0665%" height="15" fill="rgb(239,18,37)" fg:x="775" fg:w="2"/><text x="26.0232%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.07%)</title><rect x="25.7732%" y="293" width="0.0665%" height="15" fill="rgb(218,185,22)" fg:x="775" fg:w="2"/><text x="26.0232%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (2 samples, 0.07%)</title><rect x="25.7732%" y="277" width="0.0665%" height="15" fill="rgb(225,218,4)" fg:x="775" fg:w="2"/><text x="26.0232%" y="287.50"></text></g><g><title>&lt;torpedo::level::TransformComp as core::clone::Clone&gt;::clone (280 samples, 9.31%)</title><rect x="24.9751%" y="485" width="9.3116%" height="15" fill="rgb(230,182,32)" fg:x="751" fg:w="280"/><text x="25.2251%" y="495.50">&lt;torpedo::lev..</text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (275 samples, 9.15%)</title><rect x="25.1413%" y="469" width="9.1453%" height="15" fill="rgb(242,56,43)" fg:x="756" fg:w="275"/><text x="25.3913%" y="479.50">&lt;alloc::boxed..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (275 samples, 9.15%)</title><rect x="25.1413%" y="453" width="9.1453%" height="15" fill="rgb(233,99,24)" fg:x="756" fg:w="275"/><text x="25.3913%" y="463.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (275 samples, 9.15%)</title><rect x="25.1413%" y="437" width="9.1453%" height="15" fill="rgb(234,209,42)" fg:x="756" fg:w="275"/><text x="25.3913%" y="447.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (275 samples, 9.15%)</title><rect x="25.1413%" y="421" width="9.1453%" height="15" fill="rgb(227,7,12)" fg:x="756" fg:w="275"/><text x="25.3913%" y="431.50">&lt;T as alloc::..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (254 samples, 8.45%)</title><rect x="25.8397%" y="405" width="8.4470%" height="15" fill="rgb(245,203,43)" fg:x="777" fg:w="254"/><text x="26.0897%" y="415.50">core::ptr::c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (254 samples, 8.45%)</title><rect x="25.8397%" y="389" width="8.4470%" height="15" fill="rgb(238,205,33)" fg:x="777" fg:w="254"/><text x="26.0897%" y="399.50">core::intrin..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.63%)</title><rect x="34.2867%" y="421" width="0.6319%" height="15" fill="rgb(231,56,7)" fg:x="1031" fg:w="19"/><text x="34.5367%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.63%)</title><rect x="34.2867%" y="405" width="0.6319%" height="15" fill="rgb(244,186,29)" fg:x="1031" fg:w="19"/><text x="34.5367%" y="415.50"></text></g><g><title>torpedo::physics::col::check_collision (7 samples, 0.23%)</title><rect x="34.6857%" y="389" width="0.2328%" height="15" fill="rgb(234,111,31)" fg:x="1043" fg:w="7"/><text x="34.9357%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::level::TransformComp&gt; (7 samples, 0.23%)</title><rect x="34.6857%" y="373" width="0.2328%" height="15" fill="rgb(241,149,10)" fg:x="1043" fg:w="7"/><text x="34.9357%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[torpedo::level::Instant]&gt;&gt; (7 samples, 0.23%)</title><rect x="34.6857%" y="357" width="0.2328%" height="15" fill="rgb(249,206,44)" fg:x="1043" fg:w="7"/><text x="34.9357%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.23%)</title><rect x="34.6857%" y="341" width="0.2328%" height="15" fill="rgb(251,153,30)" fg:x="1043" fg:w="7"/><text x="34.9357%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.23%)</title><rect x="34.6857%" y="325" width="0.2328%" height="15" fill="rgb(239,152,38)" fg:x="1043" fg:w="7"/><text x="34.9357%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.23%)</title><rect x="34.6857%" y="309" width="0.2328%" height="15" fill="rgb(249,139,47)" fg:x="1043" fg:w="7"/><text x="34.9357%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::level::TransformComp&gt; (21 samples, 0.70%)</title><rect x="34.2867%" y="469" width="0.6984%" height="15" fill="rgb(244,64,35)" fg:x="1031" fg:w="21"/><text x="34.5367%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[torpedo::level::Instant]&gt;&gt; (21 samples, 0.70%)</title><rect x="34.2867%" y="453" width="0.6984%" height="15" fill="rgb(216,46,15)" fg:x="1031" fg:w="21"/><text x="34.5367%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.70%)</title><rect x="34.2867%" y="437" width="0.6984%" height="15" fill="rgb(250,74,19)" fg:x="1031" fg:w="21"/><text x="34.5367%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::for_value_raw (2 samples, 0.07%)</title><rect x="34.9185%" y="421" width="0.0665%" height="15" fill="rgb(249,42,33)" fg:x="1050" fg:w="2"/><text x="35.1685%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.07%)</title><rect x="34.9185%" y="405" width="0.0665%" height="15" fill="rgb(242,149,17)" fg:x="1050" fg:w="2"/><text x="35.1685%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (2 samples, 0.07%)</title><rect x="34.9185%" y="389" width="0.0665%" height="15" fill="rgb(244,29,21)" fg:x="1050" fg:w="2"/><text x="35.1685%" y="399.50"></text></g><g><title>torpedo::physics::col::check_collision (1 samples, 0.03%)</title><rect x="34.9518%" y="373" width="0.0333%" height="15" fill="rgb(220,130,37)" fg:x="1051" fg:w="1"/><text x="35.2018%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::level::TransformComp&gt; (1 samples, 0.03%)</title><rect x="34.9518%" y="357" width="0.0333%" height="15" fill="rgb(211,67,2)" fg:x="1051" fg:w="1"/><text x="35.2018%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[torpedo::level::Instant]&gt;&gt; (1 samples, 0.03%)</title><rect x="34.9518%" y="341" width="0.0333%" height="15" fill="rgb(235,68,52)" fg:x="1051" fg:w="1"/><text x="35.2018%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="34.9518%" y="325" width="0.0333%" height="15" fill="rgb(246,142,3)" fg:x="1051" fg:w="1"/><text x="35.2018%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::for_value_raw (1 samples, 0.03%)</title><rect x="34.9518%" y="309" width="0.0333%" height="15" fill="rgb(241,25,7)" fg:x="1051" fg:w="1"/><text x="35.2018%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.03%)</title><rect x="34.9518%" y="293" width="0.0333%" height="15" fill="rgb(242,119,39)" fg:x="1051" fg:w="1"/><text x="35.2018%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked::precondition_check (1 samples, 0.03%)</title><rect x="34.9518%" y="277" width="0.0333%" height="15" fill="rgb(241,98,45)" fg:x="1051" fg:w="1"/><text x="35.2018%" y="287.50"></text></g><g><title>torpedo::math::BoundingBox::check_collision (6 samples, 0.20%)</title><rect x="34.9850%" y="469" width="0.1995%" height="15" fill="rgb(254,28,30)" fg:x="1052" fg:w="6"/><text x="35.2350%" y="479.50"></text></g><g><title>raylib::core::collision::&lt;impl raylib::core::math::BoundingBox&gt;::check_collision_boxes (6 samples, 0.20%)</title><rect x="34.9850%" y="453" width="0.1995%" height="15" fill="rgb(241,142,54)" fg:x="1052" fg:w="6"/><text x="35.2350%" y="463.50"></text></g><g><title>torpedo::physics::col::check_collision (50 samples, 1.66%)</title><rect x="34.2867%" y="485" width="1.6628%" height="15" fill="rgb(222,85,15)" fg:x="1031" fg:w="50"/><text x="34.5367%" y="495.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (23 samples, 0.76%)</title><rect x="35.1846%" y="469" width="0.7649%" height="15" fill="rgb(210,85,47)" fg:x="1058" fg:w="23"/><text x="35.4346%" y="479.50"></text></g><g><title>torpedo::physics::check_collision_comps (333 samples, 11.07%)</title><rect x="24.9418%" y="501" width="11.0742%" height="15" fill="rgb(224,206,25)" fg:x="750" fg:w="333"/><text x="25.1918%" y="511.50">torpedo::physics..</text></g><g><title>torpedo::physics::update (2 samples, 0.07%)</title><rect x="35.9495%" y="485" width="0.0665%" height="15" fill="rgb(243,201,19)" fg:x="1081" fg:w="2"/><text x="36.1995%" y="495.50"></text></g><g><title>torpedo::physics::check_collision_comps (2 samples, 0.07%)</title><rect x="35.9495%" y="469" width="0.0665%" height="15" fill="rgb(236,59,4)" fg:x="1081" fg:w="2"/><text x="36.1995%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="36.0160%" y="485" width="0.0333%" height="15" fill="rgb(254,179,45)" fg:x="1083" fg:w="1"/><text x="36.2660%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="36.0160%" y="469" width="0.0333%" height="15" fill="rgb(226,14,10)" fg:x="1083" fg:w="1"/><text x="36.2660%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1 samples, 0.03%)</title><rect x="36.0160%" y="453" width="0.0333%" height="15" fill="rgb(244,27,41)" fg:x="1083" fg:w="1"/><text x="36.2660%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="36.0160%" y="437" width="0.0333%" height="15" fill="rgb(235,35,32)" fg:x="1083" fg:w="1"/><text x="36.2660%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="36.0160%" y="421" width="0.0333%" height="15" fill="rgb(218,68,31)" fg:x="1083" fg:w="1"/><text x="36.2660%" y="431.50"></text></g><g><title>__pthread_jit_write_protect_bulk_image_load_callback (12 samples, 0.40%)</title><rect x="36.0825%" y="309" width="0.3991%" height="15" fill="rgb(207,120,37)" fg:x="1085" fg:w="12"/><text x="36.3325%" y="319.50"></text></g><g><title>__pthread_workqueue_allow_send_signals (3 samples, 0.10%)</title><rect x="36.4815%" y="309" width="0.0998%" height="15" fill="rgb(227,98,0)" fg:x="1097" fg:w="3"/><text x="36.7315%" y="319.50"></text></g><g><title>_kpersona_get (3 samples, 0.10%)</title><rect x="36.4815%" y="293" width="0.0998%" height="15" fill="rgb(207,7,3)" fg:x="1097" fg:w="3"/><text x="36.7315%" y="303.50"></text></g><g><title>std::thread::scoped::Scope::spawn (469 samples, 15.60%)</title><rect x="36.0492%" y="373" width="15.5969%" height="15" fill="rgb(206,98,19)" fg:x="1084" fg:w="469"/><text x="36.2992%" y="383.50">std::thread::scoped::Sco..</text></g><g><title>std::thread::scoped::&lt;impl std::thread::Builder&gt;::spawn_scoped (469 samples, 15.60%)</title><rect x="36.0492%" y="357" width="15.5969%" height="15" fill="rgb(217,5,26)" fg:x="1084" fg:w="469"/><text x="36.2992%" y="367.50">std::thread::scoped::&lt;im..</text></g><g><title>std::thread::Builder::spawn_unchecked_ (469 samples, 15.60%)</title><rect x="36.0492%" y="341" width="15.5969%" height="15" fill="rgb(235,190,38)" fg:x="1084" fg:w="469"/><text x="36.2992%" y="351.50">std::thread::Builder::sp..</text></g><g><title>std::sys::pal::unix::thread::Thread::new (468 samples, 15.56%)</title><rect x="36.0825%" y="325" width="15.5637%" height="15" fill="rgb(247,86,24)" fg:x="1085" fg:w="468"/><text x="36.3325%" y="335.50">std::sys::pal::unix::thr..</text></g><g><title>_pthread_workqueue_addthreads_np (453 samples, 15.06%)</title><rect x="36.5813%" y="309" width="15.0648%" height="15" fill="rgb(205,101,16)" fg:x="1100" fg:w="453"/><text x="36.8313%" y="319.50">_pthread_workqueue_addt..</text></g><g><title>__kernelrpc_mach_vm_allocate_trap (453 samples, 15.06%)</title><rect x="36.5813%" y="293" width="15.0648%" height="15" fill="rgb(246,168,33)" fg:x="1100" fg:w="453"/><text x="36.8313%" y="303.50">__kernelrpc_mach_vm_all..</text></g><g><title>std::thread::scoped::scope (482 samples, 16.03%)</title><rect x="36.0492%" y="485" width="16.0293%" height="15" fill="rgb(231,114,1)" fg:x="1084" fg:w="482"/><text x="36.2992%" y="495.50">std::thread::scoped::scope</text></g><g><title>std::panic::catch_unwind (482 samples, 16.03%)</title><rect x="36.0492%" y="469" width="16.0293%" height="15" fill="rgb(207,184,53)" fg:x="1084" fg:w="482"/><text x="36.2992%" y="479.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (482 samples, 16.03%)</title><rect x="36.0492%" y="453" width="16.0293%" height="15" fill="rgb(224,95,51)" fg:x="1084" fg:w="482"/><text x="36.2992%" y="463.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (482 samples, 16.03%)</title><rect x="36.0492%" y="437" width="16.0293%" height="15" fill="rgb(212,188,45)" fg:x="1084" fg:w="482"/><text x="36.2992%" y="447.50">std::panicking::try::do_c..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (482 samples, 16.03%)</title><rect x="36.0492%" y="421" width="16.0293%" height="15" fill="rgb(223,154,38)" fg:x="1084" fg:w="482"/><text x="36.2992%" y="431.50">&lt;core::panic::unwind_safe..</text></g><g><title>std::thread::scoped::scope::{{closure}} (482 samples, 16.03%)</title><rect x="36.0492%" y="405" width="16.0293%" height="15" fill="rgb(251,22,52)" fg:x="1084" fg:w="482"/><text x="36.2992%" y="415.50">std::thread::scoped::scop..</text></g><g><title>torpedo::physics::make_octree::{{closure}} (482 samples, 16.03%)</title><rect x="36.0492%" y="389" width="16.0293%" height="15" fill="rgb(229,209,22)" fg:x="1084" fg:w="482"/><text x="36.2992%" y="399.50">torpedo::physics::make_oc..</text></g><g><title>std::thread::scoped::ScopedJoinHandle&lt;T&gt;::join (13 samples, 0.43%)</title><rect x="51.6462%" y="373" width="0.4323%" height="15" fill="rgb(234,138,34)" fg:x="1553" fg:w="13"/><text x="51.8962%" y="383.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (13 samples, 0.43%)</title><rect x="51.6462%" y="357" width="0.4323%" height="15" fill="rgb(212,95,11)" fg:x="1553" fg:w="13"/><text x="51.8962%" y="367.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::join (13 samples, 0.43%)</title><rect x="51.6462%" y="341" width="0.4323%" height="15" fill="rgb(240,179,47)" fg:x="1553" fg:w="13"/><text x="51.8962%" y="351.50"></text></g><g><title>_pthread_mutex_setprioceiling (13 samples, 0.43%)</title><rect x="51.6462%" y="325" width="0.4323%" height="15" fill="rgb(240,163,11)" fg:x="1553" fg:w="13"/><text x="51.8962%" y="335.50"></text></g><g><title>__pthread_cond_wait (8 samples, 0.27%)</title><rect x="51.8124%" y="309" width="0.2660%" height="15" fill="rgb(236,37,12)" fg:x="1558" fg:w="8"/><text x="52.0624%" y="319.50"></text></g><g><title>___workq_open (8 samples, 0.27%)</title><rect x="51.8124%" y="293" width="0.2660%" height="15" fill="rgb(232,164,16)" fg:x="1558" fg:w="8"/><text x="52.0624%" y="303.50"></text></g><g><title>torpedo::math::BoundingBox::check_collision (2 samples, 0.07%)</title><rect x="52.0785%" y="485" width="0.0665%" height="15" fill="rgb(244,205,15)" fg:x="1566" fg:w="2"/><text x="52.3285%" y="495.50"></text></g><g><title>raylib::core::collision::&lt;impl raylib::core::math::BoundingBox&gt;::check_collision_boxes (2 samples, 0.07%)</title><rect x="52.0785%" y="469" width="0.0665%" height="15" fill="rgb(223,117,47)" fg:x="1566" fg:w="2"/><text x="52.3285%" y="479.50"></text></g><g><title>torpedo::physics::PhysicsComp::max (8 samples, 0.27%)</title><rect x="52.1450%" y="485" width="0.2660%" height="15" fill="rgb(244,107,35)" fg:x="1568" fg:w="8"/><text x="52.3950%" y="495.50"></text></g><g><title>torpedo::physics::Collision::max (8 samples, 0.27%)</title><rect x="52.1450%" y="469" width="0.2660%" height="15" fill="rgb(205,140,8)" fg:x="1568" fg:w="8"/><text x="52.3950%" y="479.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (8 samples, 0.27%)</title><rect x="52.1450%" y="453" width="0.2660%" height="15" fill="rgb(228,84,46)" fg:x="1568" fg:w="8"/><text x="52.3950%" y="463.50"></text></g><g><title>torpedo::physics::make_octree (497 samples, 16.53%)</title><rect x="36.0160%" y="501" width="16.5281%" height="15" fill="rgb(254,188,9)" fg:x="1083" fg:w="497"/><text x="36.2660%" y="511.50">torpedo::physics::make_oct..</text></g><g><title>torpedo::physics::PhysicsComp::min (4 samples, 0.13%)</title><rect x="52.4110%" y="485" width="0.1330%" height="15" fill="rgb(206,112,54)" fg:x="1576" fg:w="4"/><text x="52.6610%" y="495.50"></text></g><g><title>torpedo::physics::Collision::max (4 samples, 0.13%)</title><rect x="52.4110%" y="469" width="0.1330%" height="15" fill="rgb(216,84,49)" fg:x="1576" fg:w="4"/><text x="52.6610%" y="479.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (4 samples, 0.13%)</title><rect x="52.4110%" y="453" width="0.1330%" height="15" fill="rgb(214,194,35)" fg:x="1576" fg:w="4"/><text x="52.6610%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,541 samples, 51.25%)</title><rect x="1.3302%" y="693" width="51.2471%" height="15" fill="rgb(249,28,3)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="703.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,541 samples, 51.25%)</title><rect x="1.3302%" y="677" width="51.2471%" height="15" fill="rgb(222,56,52)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,541 samples, 51.25%)</title><rect x="1.3302%" y="661" width="51.2471%" height="15" fill="rgb(245,217,50)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="671.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,541 samples, 51.25%)</title><rect x="1.3302%" y="645" width="51.2471%" height="15" fill="rgb(213,201,24)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="655.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,541 samples, 51.25%)</title><rect x="1.3302%" y="629" width="51.2471%" height="15" fill="rgb(248,116,28)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="639.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,541 samples, 51.25%)</title><rect x="1.3302%" y="613" width="51.2471%" height="15" fill="rgb(219,72,43)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="623.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,541 samples, 51.25%)</title><rect x="1.3302%" y="597" width="51.2471%" height="15" fill="rgb(209,138,14)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="607.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,541 samples, 51.25%)</title><rect x="1.3302%" y="581" width="51.2471%" height="15" fill="rgb(222,18,33)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="591.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,541 samples, 51.25%)</title><rect x="1.3302%" y="565" width="51.2471%" height="15" fill="rgb(213,199,7)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="575.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,541 samples, 51.25%)</title><rect x="1.3302%" y="549" width="51.2471%" height="15" fill="rgb(250,110,10)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="559.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>torpedo::level::level_loop::{{closure}} (1,541 samples, 51.25%)</title><rect x="1.3302%" y="533" width="51.2471%" height="15" fill="rgb(248,123,6)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="543.50">torpedo::level::level_loop::{{closure}}</text></g><g><title>torpedo::physics::update (1,541 samples, 51.25%)</title><rect x="1.3302%" y="517" width="51.2471%" height="15" fill="rgb(206,91,31)" fg:x="40" fg:w="1541"/><text x="1.5802%" y="527.50">torpedo::physics::update</text></g><g><title>torpedo::physics::update (1 samples, 0.03%)</title><rect x="52.5441%" y="501" width="0.0333%" height="15" fill="rgb(211,154,13)" fg:x="1580" fg:w="1"/><text x="52.7941%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (530 samples, 17.63%)</title><rect x="52.5773%" y="693" width="17.6255%" height="15" fill="rgb(225,148,7)" fg:x="1581" fg:w="530"/><text x="52.8273%" y="703.50">core::ptr::drop_in_place&lt;st..</text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (530 samples, 17.63%)</title><rect x="52.5773%" y="677" width="17.6255%" height="15" fill="rgb(220,160,43)" fg:x="1581" fg:w="530"/><text x="52.8273%" y="687.50">&lt;std::sys::pal::unix::stack..</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (530 samples, 17.63%)</title><rect x="52.5773%" y="661" width="17.6255%" height="15" fill="rgb(213,52,39)" fg:x="1581" fg:w="530"/><text x="52.8273%" y="671.50">std::sys::pal::unix::stack_..</text></g><g><title>6103543808 (2,076 samples, 69.04%)</title><rect x="1.3302%" y="741" width="69.0389%" height="15" fill="rgb(243,137,7)" fg:x="40" fg:w="2076"/><text x="1.5802%" y="751.50">6103543808</text></g><g><title>__pthread_cond_wait (2,076 samples, 69.04%)</title><rect x="1.3302%" y="725" width="69.0389%" height="15" fill="rgb(230,79,13)" fg:x="40" fg:w="2076"/><text x="1.5802%" y="735.50">__pthread_cond_wait</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (2,076 samples, 69.04%)</title><rect x="1.3302%" y="709" width="69.0389%" height="15" fill="rgb(247,105,23)" fg:x="40" fg:w="2076"/><text x="1.5802%" y="719.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (5 samples, 0.17%)</title><rect x="70.2029%" y="693" width="0.1663%" height="15" fill="rgb(223,179,41)" fg:x="2111" fg:w="5"/><text x="70.4529%" y="703.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (5 samples, 0.17%)</title><rect x="70.2029%" y="677" width="0.1663%" height="15" fill="rgb(218,9,34)" fg:x="2111" fg:w="5"/><text x="70.4529%" y="687.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (3 samples, 0.10%)</title><rect x="70.2694%" y="661" width="0.0998%" height="15" fill="rgb(222,106,8)" fg:x="2113" fg:w="3"/><text x="70.5194%" y="671.50"></text></g><g><title>_host_get_special_port (2 samples, 0.07%)</title><rect x="70.3026%" y="645" width="0.0665%" height="15" fill="rgb(211,220,0)" fg:x="2114" fg:w="2"/><text x="70.5526%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="70.4024%" y="501" width="0.0333%" height="15" fill="rgb(229,52,16)" fg:x="2117" fg:w="1"/><text x="70.6524%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="70.4024%" y="485" width="0.0333%" height="15" fill="rgb(212,155,18)" fg:x="2117" fg:w="1"/><text x="70.6524%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1 samples, 0.03%)</title><rect x="70.4024%" y="469" width="0.0333%" height="15" fill="rgb(242,21,14)" fg:x="2117" fg:w="1"/><text x="70.6524%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="70.4024%" y="453" width="0.0333%" height="15" fill="rgb(222,19,48)" fg:x="2117" fg:w="1"/><text x="70.6524%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="70.4024%" y="437" width="0.0333%" height="15" fill="rgb(232,45,27)" fg:x="2117" fg:w="1"/><text x="70.6524%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="70.4024%" y="421" width="0.0333%" height="15" fill="rgb(249,103,42)" fg:x="2117" fg:w="1"/><text x="70.6524%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="70.4024%" y="405" width="0.0333%" height="15" fill="rgb(246,81,33)" fg:x="2117" fg:w="1"/><text x="70.6524%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.03%)</title><rect x="70.4024%" y="389" width="0.0333%" height="15" fill="rgb(252,33,42)" fg:x="2117" fg:w="1"/><text x="70.6524%" y="399.50"></text></g><g><title>torpedo::physics::PhysicsComp::min (1 samples, 0.03%)</title><rect x="70.4357%" y="501" width="0.0333%" height="15" fill="rgb(209,212,41)" fg:x="2118" fg:w="1"/><text x="70.6857%" y="511.50"></text></g><g><title>torpedo::arena::Arena::queue_destroy (1 samples, 0.03%)</title><rect x="70.4689%" y="469" width="0.0333%" height="15" fill="rgb(207,154,6)" fg:x="2119" fg:w="1"/><text x="70.7189%" y="479.50"></text></g><g><title>_pthread_cond_broadcast (1 samples, 0.03%)</title><rect x="70.4689%" y="453" width="0.0333%" height="15" fill="rgb(223,64,47)" fg:x="2119" fg:w="1"/><text x="70.7189%" y="463.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="70.4689%" y="437" width="0.0333%" height="15" fill="rgb(211,161,38)" fg:x="2119" fg:w="1"/><text x="70.7189%" y="447.50"></text></g><g><title>torpedo::arena::Arena::alloc (2 samples, 0.07%)</title><rect x="70.4689%" y="485" width="0.0665%" height="15" fill="rgb(219,138,40)" fg:x="2119" fg:w="2"/><text x="70.7189%" y="495.50"></text></g><g><title>torpedo::arena::Arena::unlock (1 samples, 0.03%)</title><rect x="70.5022%" y="469" width="0.0333%" height="15" fill="rgb(241,228,46)" fg:x="2120" fg:w="1"/><text x="70.7522%" y="479.50"></text></g><g><title>_pthread_cond_broadcast (1 samples, 0.03%)</title><rect x="70.5022%" y="453" width="0.0333%" height="15" fill="rgb(223,209,38)" fg:x="2120" fg:w="1"/><text x="70.7522%" y="463.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="70.5022%" y="437" width="0.0333%" height="15" fill="rgb(236,164,45)" fg:x="2120" fg:w="1"/><text x="70.7522%" y="447.50"></text></g><g><title>torpedo::math::BoundingBox::check_collision (1 samples, 0.03%)</title><rect x="70.5354%" y="485" width="0.0333%" height="15" fill="rgb(231,15,5)" fg:x="2121" fg:w="1"/><text x="70.7854%" y="495.50"></text></g><g><title>raylib::core::collision::&lt;impl raylib::core::math::BoundingBox&gt;::check_collision_boxes (1 samples, 0.03%)</title><rect x="70.5354%" y="469" width="0.0333%" height="15" fill="rgb(252,35,15)" fg:x="2121" fg:w="1"/><text x="70.7854%" y="479.50"></text></g><g><title>torpedo::physics::PhysicsComp::min (1 samples, 0.03%)</title><rect x="70.5687%" y="485" width="0.0333%" height="15" fill="rgb(248,181,18)" fg:x="2122" fg:w="1"/><text x="70.8187%" y="495.50"></text></g><g><title>torpedo::physics::Collision::max (1 samples, 0.03%)</title><rect x="70.5687%" y="469" width="0.0333%" height="15" fill="rgb(233,39,42)" fg:x="2122" fg:w="1"/><text x="70.8187%" y="479.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (1 samples, 0.03%)</title><rect x="70.5687%" y="453" width="0.0333%" height="15" fill="rgb(238,110,33)" fg:x="2122" fg:w="1"/><text x="70.8187%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.40%)</title><rect x="70.4024%" y="693" width="0.3991%" height="15" fill="rgb(233,195,10)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.40%)</title><rect x="70.4024%" y="677" width="0.3991%" height="15" fill="rgb(254,105,3)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.40%)</title><rect x="70.4024%" y="661" width="0.3991%" height="15" fill="rgb(221,225,9)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (12 samples, 0.40%)</title><rect x="70.4024%" y="645" width="0.3991%" height="15" fill="rgb(224,227,45)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="655.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.40%)</title><rect x="70.4024%" y="629" width="0.3991%" height="15" fill="rgb(229,198,43)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="639.50"></text></g><g><title>std::panicking::try (12 samples, 0.40%)</title><rect x="70.4024%" y="613" width="0.3991%" height="15" fill="rgb(206,209,35)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="623.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.40%)</title><rect x="70.4024%" y="597" width="0.3991%" height="15" fill="rgb(245,195,53)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.40%)</title><rect x="70.4024%" y="581" width="0.3991%" height="15" fill="rgb(240,92,26)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (12 samples, 0.40%)</title><rect x="70.4024%" y="565" width="0.3991%" height="15" fill="rgb(207,40,23)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="575.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (12 samples, 0.40%)</title><rect x="70.4024%" y="549" width="0.3991%" height="15" fill="rgb(223,111,35)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="559.50"></text></g><g><title>torpedo::physics::make_octree::{{closure}}::{{closure}} (12 samples, 0.40%)</title><rect x="70.4024%" y="533" width="0.3991%" height="15" fill="rgb(229,147,28)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="543.50"></text></g><g><title>torpedo::physics::make_octree (12 samples, 0.40%)</title><rect x="70.4024%" y="517" width="0.3991%" height="15" fill="rgb(211,29,28)" fg:x="2117" fg:w="12"/><text x="70.6524%" y="527.50"></text></g><g><title>torpedo::physics::make_octree (10 samples, 0.33%)</title><rect x="70.4689%" y="501" width="0.3326%" height="15" fill="rgb(228,72,33)" fg:x="2119" fg:w="10"/><text x="70.7189%" y="511.50"></text></g><g><title>torpedo::physics::make_octree (6 samples, 0.20%)</title><rect x="70.6019%" y="485" width="0.1995%" height="15" fill="rgb(205,214,31)" fg:x="2123" fg:w="6"/><text x="70.8519%" y="495.50"></text></g><g><title>torpedo::arena::AVec&lt;T&gt;::push (6 samples, 0.20%)</title><rect x="70.6019%" y="469" width="0.1995%" height="15" fill="rgb(224,111,15)" fg:x="2123" fg:w="6"/><text x="70.8519%" y="479.50"></text></g><g><title>torpedo::arena::Arena::alloc_array_space (6 samples, 0.20%)</title><rect x="70.6019%" y="453" width="0.1995%" height="15" fill="rgb(253,21,26)" fg:x="2123" fg:w="6"/><text x="70.8519%" y="463.50"></text></g><g><title>torpedo::arena::Arena::lock (6 samples, 0.20%)</title><rect x="70.6019%" y="437" width="0.1995%" height="15" fill="rgb(245,139,43)" fg:x="2123" fg:w="6"/><text x="70.8519%" y="447.50"></text></g><g><title>__pthread_mutex_firstfit_unlock_slow (6 samples, 0.20%)</title><rect x="70.6019%" y="421" width="0.1995%" height="15" fill="rgb(252,170,7)" fg:x="2123" fg:w="6"/><text x="70.8519%" y="431.50"></text></g><g><title>_pthread_rwlock_init (6 samples, 0.20%)</title><rect x="70.6019%" y="405" width="0.1995%" height="15" fill="rgb(231,118,14)" fg:x="2123" fg:w="6"/><text x="70.8519%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (5 samples, 0.17%)</title><rect x="70.8015%" y="693" width="0.1663%" height="15" fill="rgb(238,83,0)" fg:x="2129" fg:w="5"/><text x="71.0515%" y="703.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (5 samples, 0.17%)</title><rect x="70.8015%" y="677" width="0.1663%" height="15" fill="rgb(221,39,39)" fg:x="2129" fg:w="5"/><text x="71.0515%" y="687.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (5 samples, 0.17%)</title><rect x="70.8015%" y="661" width="0.1663%" height="15" fill="rgb(222,119,46)" fg:x="2129" fg:w="5"/><text x="71.0515%" y="671.50"></text></g><g><title>6105690112 (19 samples, 0.63%)</title><rect x="70.3691%" y="741" width="0.6319%" height="15" fill="rgb(222,165,49)" fg:x="2116" fg:w="19"/><text x="70.6191%" y="751.50"></text></g><g><title>__pthread_cond_wait (19 samples, 0.63%)</title><rect x="70.3691%" y="725" width="0.6319%" height="15" fill="rgb(219,113,52)" fg:x="2116" fg:w="19"/><text x="70.6191%" y="735.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (18 samples, 0.60%)</title><rect x="70.4024%" y="709" width="0.5986%" height="15" fill="rgb(214,7,15)" fg:x="2117" fg:w="18"/><text x="70.6524%" y="719.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (1 samples, 0.03%)</title><rect x="70.9677%" y="693" width="0.0333%" height="15" fill="rgb(235,32,4)" fg:x="2134" fg:w="1"/><text x="71.2177%" y="703.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (1 samples, 0.03%)</title><rect x="70.9677%" y="677" width="0.0333%" height="15" fill="rgb(238,90,54)" fg:x="2134" fg:w="1"/><text x="71.2177%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="71.1008%" y="661" width="0.0333%" height="15" fill="rgb(213,208,19)" fg:x="2138" fg:w="1"/><text x="71.3508%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="71.1008%" y="645" width="0.0333%" height="15" fill="rgb(233,156,4)" fg:x="2138" fg:w="1"/><text x="71.3508%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="71.1008%" y="629" width="0.0333%" height="15" fill="rgb(207,194,5)" fg:x="2138" fg:w="1"/><text x="71.3508%" y="639.50"></text></g><g><title>__os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="71.1008%" y="613" width="0.0333%" height="15" fill="rgb(206,111,30)" fg:x="2138" fg:w="1"/><text x="71.3508%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="71.1340%" y="501" width="0.0333%" height="15" fill="rgb(243,70,54)" fg:x="2139" fg:w="1"/><text x="71.3840%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="71.1340%" y="485" width="0.0333%" height="15" fill="rgb(242,28,8)" fg:x="2139" fg:w="1"/><text x="71.3840%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1 samples, 0.03%)</title><rect x="71.1340%" y="469" width="0.0333%" height="15" fill="rgb(219,106,18)" fg:x="2139" fg:w="1"/><text x="71.3840%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="71.1340%" y="453" width="0.0333%" height="15" fill="rgb(244,222,10)" fg:x="2139" fg:w="1"/><text x="71.3840%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="71.1340%" y="437" width="0.0333%" height="15" fill="rgb(236,179,52)" fg:x="2139" fg:w="1"/><text x="71.3840%" y="447.50"></text></g><g><title>__os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="71.1340%" y="421" width="0.0333%" height="15" fill="rgb(213,23,39)" fg:x="2139" fg:w="1"/><text x="71.3840%" y="431.50"></text></g><g><title>torpedo::arena::Arena::alloc (1 samples, 0.03%)</title><rect x="71.1673%" y="501" width="0.0333%" height="15" fill="rgb(238,48,10)" fg:x="2140" fg:w="1"/><text x="71.4173%" y="511.50"></text></g><g><title>torpedo::arena::Arena::unlock (1 samples, 0.03%)</title><rect x="71.1673%" y="485" width="0.0333%" height="15" fill="rgb(251,196,23)" fg:x="2140" fg:w="1"/><text x="71.4173%" y="495.50"></text></g><g><title>_pthread_cond_broadcast (1 samples, 0.03%)</title><rect x="71.1673%" y="469" width="0.0333%" height="15" fill="rgb(250,152,24)" fg:x="2140" fg:w="1"/><text x="71.4173%" y="479.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="71.1673%" y="453" width="0.0333%" height="15" fill="rgb(209,150,17)" fg:x="2140" fg:w="1"/><text x="71.4173%" y="463.50"></text></g><g><title>torpedo::physics::PhysicsComp::min (1 samples, 0.03%)</title><rect x="71.2005%" y="501" width="0.0333%" height="15" fill="rgb(234,202,34)" fg:x="2141" fg:w="1"/><text x="71.4505%" y="511.50"></text></g><g><title>torpedo::physics::Collision::max (1 samples, 0.03%)</title><rect x="71.2005%" y="485" width="0.0333%" height="15" fill="rgb(253,148,53)" fg:x="2141" fg:w="1"/><text x="71.4505%" y="495.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (1 samples, 0.03%)</title><rect x="71.2005%" y="469" width="0.0333%" height="15" fill="rgb(218,129,16)" fg:x="2141" fg:w="1"/><text x="71.4505%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt; (1 samples, 0.03%)</title><rect x="71.2338%" y="485" width="0.0333%" height="15" fill="rgb(216,85,19)" fg:x="2142" fg:w="1"/><text x="71.4838%" y="495.50"></text></g><g><title> 8]&gt; (1 samples, 0.03%)</title><rect x="71.2338%" y="469" width="0.0333%" height="15" fill="rgb(235,228,7)" fg:x="2142" fg:w="1"/><text x="71.4838%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.03%)</title><rect x="71.2338%" y="453" width="0.0333%" height="15" fill="rgb(245,175,0)" fg:x="2142" fg:w="1"/><text x="71.4838%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.03%)</title><rect x="71.2338%" y="437" width="0.0333%" height="15" fill="rgb(208,168,36)" fg:x="2142" fg:w="1"/><text x="71.4838%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="71.2338%" y="421" width="0.0333%" height="15" fill="rgb(246,171,24)" fg:x="2142" fg:w="1"/><text x="71.4838%" y="431.50"></text></g><g><title>torpedo::physics::PhysicsComp::min (2 samples, 0.07%)</title><rect x="71.2670%" y="485" width="0.0665%" height="15" fill="rgb(215,142,24)" fg:x="2143" fg:w="2"/><text x="71.5170%" y="495.50"></text></g><g><title>torpedo::physics::Collision::max (2 samples, 0.07%)</title><rect x="71.2670%" y="469" width="0.0665%" height="15" fill="rgb(250,187,7)" fg:x="2143" fg:w="2"/><text x="71.5170%" y="479.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (2 samples, 0.07%)</title><rect x="71.2670%" y="453" width="0.0665%" height="15" fill="rgb(228,66,33)" fg:x="2143" fg:w="2"/><text x="71.5170%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="71.3336%" y="469" width="0.0333%" height="15" fill="rgb(234,215,21)" fg:x="2145" fg:w="1"/><text x="71.5836%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="71.3336%" y="453" width="0.0333%" height="15" fill="rgb(222,191,20)" fg:x="2145" fg:w="1"/><text x="71.5836%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1 samples, 0.03%)</title><rect x="71.3336%" y="437" width="0.0333%" height="15" fill="rgb(245,79,54)" fg:x="2145" fg:w="1"/><text x="71.5836%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="71.3336%" y="421" width="0.0333%" height="15" fill="rgb(240,10,37)" fg:x="2145" fg:w="1"/><text x="71.5836%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="71.3336%" y="405" width="0.0333%" height="15" fill="rgb(214,192,32)" fg:x="2145" fg:w="1"/><text x="71.5836%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt; (1 samples, 0.03%)</title><rect x="71.3668%" y="469" width="0.0333%" height="15" fill="rgb(209,36,54)" fg:x="2146" fg:w="1"/><text x="71.6168%" y="479.50"></text></g><g><title> 8]&gt; (1 samples, 0.03%)</title><rect x="71.3668%" y="453" width="0.0333%" height="15" fill="rgb(220,10,11)" fg:x="2146" fg:w="1"/><text x="71.6168%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.03%)</title><rect x="71.3668%" y="437" width="0.0333%" height="15" fill="rgb(221,106,17)" fg:x="2146" fg:w="1"/><text x="71.6168%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.03%)</title><rect x="71.3668%" y="421" width="0.0333%" height="15" fill="rgb(251,142,44)" fg:x="2146" fg:w="1"/><text x="71.6168%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="71.3668%" y="405" width="0.0333%" height="15" fill="rgb(238,13,15)" fg:x="2146" fg:w="1"/><text x="71.6168%" y="415.50"></text></g><g><title>torpedo::arena::Arena::lock (6 samples, 0.20%)</title><rect x="71.4001%" y="437" width="0.1995%" height="15" fill="rgb(208,107,27)" fg:x="2147" fg:w="6"/><text x="71.6501%" y="447.50"></text></g><g><title>__pthread_mutex_firstfit_unlock_slow (6 samples, 0.20%)</title><rect x="71.4001%" y="421" width="0.1995%" height="15" fill="rgb(205,136,37)" fg:x="2147" fg:w="6"/><text x="71.6501%" y="431.50"></text></g><g><title>_pthread_rwlock_init (6 samples, 0.20%)</title><rect x="71.4001%" y="405" width="0.1995%" height="15" fill="rgb(250,205,27)" fg:x="2147" fg:w="6"/><text x="71.6501%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.53%)</title><rect x="71.1008%" y="693" width="0.5321%" height="15" fill="rgb(210,80,43)" fg:x="2138" fg:w="16"/><text x="71.3508%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.53%)</title><rect x="71.1008%" y="677" width="0.5321%" height="15" fill="rgb(247,160,36)" fg:x="2138" fg:w="16"/><text x="71.3508%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15 samples, 0.50%)</title><rect x="71.1340%" y="661" width="0.4988%" height="15" fill="rgb(234,13,49)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (15 samples, 0.50%)</title><rect x="71.1340%" y="645" width="0.4988%" height="15" fill="rgb(234,122,0)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="655.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.50%)</title><rect x="71.1340%" y="629" width="0.4988%" height="15" fill="rgb(207,146,38)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="639.50"></text></g><g><title>std::panicking::try (15 samples, 0.50%)</title><rect x="71.1340%" y="613" width="0.4988%" height="15" fill="rgb(207,177,25)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="623.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.50%)</title><rect x="71.1340%" y="597" width="0.4988%" height="15" fill="rgb(211,178,42)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.50%)</title><rect x="71.1340%" y="581" width="0.4988%" height="15" fill="rgb(230,69,54)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (15 samples, 0.50%)</title><rect x="71.1340%" y="565" width="0.4988%" height="15" fill="rgb(214,135,41)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="575.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (15 samples, 0.50%)</title><rect x="71.1340%" y="549" width="0.4988%" height="15" fill="rgb(237,67,25)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="559.50"></text></g><g><title>torpedo::physics::make_octree::{{closure}}::{{closure}} (15 samples, 0.50%)</title><rect x="71.1340%" y="533" width="0.4988%" height="15" fill="rgb(222,189,50)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="543.50"></text></g><g><title>torpedo::physics::make_octree (15 samples, 0.50%)</title><rect x="71.1340%" y="517" width="0.4988%" height="15" fill="rgb(245,148,34)" fg:x="2139" fg:w="15"/><text x="71.3840%" y="527.50"></text></g><g><title>torpedo::physics::make_octree (12 samples, 0.40%)</title><rect x="71.2338%" y="501" width="0.3991%" height="15" fill="rgb(222,29,6)" fg:x="2142" fg:w="12"/><text x="71.4838%" y="511.50"></text></g><g><title>torpedo::physics::make_octree (9 samples, 0.30%)</title><rect x="71.3336%" y="485" width="0.2993%" height="15" fill="rgb(221,189,43)" fg:x="2145" fg:w="9"/><text x="71.5836%" y="495.50"></text></g><g><title>torpedo::arena::AVec&lt;T&gt;::push (7 samples, 0.23%)</title><rect x="71.4001%" y="469" width="0.2328%" height="15" fill="rgb(207,36,27)" fg:x="2147" fg:w="7"/><text x="71.6501%" y="479.50"></text></g><g><title>torpedo::arena::Arena::alloc_array_space (7 samples, 0.23%)</title><rect x="71.4001%" y="453" width="0.2328%" height="15" fill="rgb(217,90,24)" fg:x="2147" fg:w="7"/><text x="71.6501%" y="463.50"></text></g><g><title>torpedo::arena::Arena::unlock (1 samples, 0.03%)</title><rect x="71.5996%" y="437" width="0.0333%" height="15" fill="rgb(224,66,35)" fg:x="2153" fg:w="1"/><text x="71.8496%" y="447.50"></text></g><g><title>_pthread_cond_broadcast (1 samples, 0.03%)</title><rect x="71.5996%" y="421" width="0.0333%" height="15" fill="rgb(221,13,50)" fg:x="2153" fg:w="1"/><text x="71.8496%" y="431.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="71.5996%" y="405" width="0.0333%" height="15" fill="rgb(236,68,49)" fg:x="2153" fg:w="1"/><text x="71.8496%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (10 samples, 0.33%)</title><rect x="71.6329%" y="693" width="0.3326%" height="15" fill="rgb(229,146,28)" fg:x="2154" fg:w="10"/><text x="71.8829%" y="703.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (10 samples, 0.33%)</title><rect x="71.6329%" y="677" width="0.3326%" height="15" fill="rgb(225,31,38)" fg:x="2154" fg:w="10"/><text x="71.8829%" y="687.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (10 samples, 0.33%)</title><rect x="71.6329%" y="661" width="0.3326%" height="15" fill="rgb(250,208,3)" fg:x="2154" fg:w="10"/><text x="71.8829%" y="671.50"></text></g><g><title>6107836416 (31 samples, 1.03%)</title><rect x="71.0010%" y="741" width="1.0309%" height="15" fill="rgb(246,54,23)" fg:x="2135" fg:w="31"/><text x="71.2510%" y="751.50"></text></g><g><title>__pthread_cond_wait (31 samples, 1.03%)</title><rect x="71.0010%" y="725" width="1.0309%" height="15" fill="rgb(243,76,11)" fg:x="2135" fg:w="31"/><text x="71.2510%" y="735.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (28 samples, 0.93%)</title><rect x="71.1008%" y="709" width="0.9312%" height="15" fill="rgb(245,21,50)" fg:x="2138" fg:w="28"/><text x="71.3508%" y="719.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (2 samples, 0.07%)</title><rect x="71.9654%" y="693" width="0.0665%" height="15" fill="rgb(228,9,43)" fg:x="2164" fg:w="2"/><text x="72.2154%" y="703.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (2 samples, 0.07%)</title><rect x="71.9654%" y="677" width="0.0665%" height="15" fill="rgb(208,100,47)" fg:x="2164" fg:w="2"/><text x="72.2154%" y="687.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (2 samples, 0.07%)</title><rect x="71.9654%" y="661" width="0.0665%" height="15" fill="rgb(232,26,8)" fg:x="2164" fg:w="2"/><text x="72.2154%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="72.0319%" y="501" width="0.0333%" height="15" fill="rgb(216,166,38)" fg:x="2166" fg:w="1"/><text x="72.2819%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.03%)</title><rect x="72.0319%" y="485" width="0.0333%" height="15" fill="rgb(251,202,51)" fg:x="2166" fg:w="1"/><text x="72.2819%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1 samples, 0.03%)</title><rect x="72.0319%" y="469" width="0.0333%" height="15" fill="rgb(254,216,34)" fg:x="2166" fg:w="1"/><text x="72.2819%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="72.0319%" y="453" width="0.0333%" height="15" fill="rgb(251,32,27)" fg:x="2166" fg:w="1"/><text x="72.2819%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt; (1 samples, 0.03%)</title><rect x="72.0652%" y="501" width="0.0333%" height="15" fill="rgb(208,127,28)" fg:x="2167" fg:w="1"/><text x="72.3152%" y="511.50"></text></g><g><title> 8]&gt; (1 samples, 0.03%)</title><rect x="72.0652%" y="485" width="0.0333%" height="15" fill="rgb(224,137,22)" fg:x="2167" fg:w="1"/><text x="72.3152%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.03%)</title><rect x="72.0652%" y="469" width="0.0333%" height="15" fill="rgb(254,70,32)" fg:x="2167" fg:w="1"/><text x="72.3152%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.03%)</title><rect x="72.0652%" y="453" width="0.0333%" height="15" fill="rgb(229,75,37)" fg:x="2167" fg:w="1"/><text x="72.3152%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="72.0652%" y="437" width="0.0333%" height="15" fill="rgb(252,64,23)" fg:x="2167" fg:w="1"/><text x="72.3152%" y="447.50"></text></g><g><title>__os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="72.0652%" y="421" width="0.0333%" height="15" fill="rgb(232,162,48)" fg:x="2167" fg:w="1"/><text x="72.3152%" y="431.50"></text></g><g><title>torpedo::arena::Arena::alloc (1 samples, 0.03%)</title><rect x="72.0984%" y="501" width="0.0333%" height="15" fill="rgb(246,160,12)" fg:x="2168" fg:w="1"/><text x="72.3484%" y="511.50"></text></g><g><title>torpedo::arena::Arena::lock (1 samples, 0.03%)</title><rect x="72.0984%" y="485" width="0.0333%" height="15" fill="rgb(247,166,0)" fg:x="2168" fg:w="1"/><text x="72.3484%" y="495.50"></text></g><g><title>__pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="72.0984%" y="469" width="0.0333%" height="15" fill="rgb(249,219,21)" fg:x="2168" fg:w="1"/><text x="72.3484%" y="479.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="72.0984%" y="453" width="0.0333%" height="15" fill="rgb(205,209,3)" fg:x="2168" fg:w="1"/><text x="72.3484%" y="463.50"></text></g><g><title>torpedo::arena::Arena::lock (2 samples, 0.07%)</title><rect x="72.1649%" y="437" width="0.0665%" height="15" fill="rgb(243,44,1)" fg:x="2170" fg:w="2"/><text x="72.4149%" y="447.50"></text></g><g><title>__pthread_mutex_firstfit_unlock_slow (2 samples, 0.07%)</title><rect x="72.1649%" y="421" width="0.0665%" height="15" fill="rgb(206,159,16)" fg:x="2170" fg:w="2"/><text x="72.4149%" y="431.50"></text></g><g><title>_pthread_rwlock_init (2 samples, 0.07%)</title><rect x="72.1649%" y="405" width="0.0665%" height="15" fill="rgb(244,77,30)" fg:x="2170" fg:w="2"/><text x="72.4149%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.33%)</title><rect x="72.0319%" y="693" width="0.3326%" height="15" fill="rgb(218,69,12)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.33%)</title><rect x="72.0319%" y="677" width="0.3326%" height="15" fill="rgb(212,87,7)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.33%)</title><rect x="72.0319%" y="661" width="0.3326%" height="15" fill="rgb(245,114,25)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10 samples, 0.33%)</title><rect x="72.0319%" y="645" width="0.3326%" height="15" fill="rgb(210,61,42)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="655.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.33%)</title><rect x="72.0319%" y="629" width="0.3326%" height="15" fill="rgb(211,52,33)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="639.50"></text></g><g><title>std::panicking::try (10 samples, 0.33%)</title><rect x="72.0319%" y="613" width="0.3326%" height="15" fill="rgb(234,58,33)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="623.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.33%)</title><rect x="72.0319%" y="597" width="0.3326%" height="15" fill="rgb(220,115,36)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.33%)</title><rect x="72.0319%" y="581" width="0.3326%" height="15" fill="rgb(243,153,54)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10 samples, 0.33%)</title><rect x="72.0319%" y="565" width="0.3326%" height="15" fill="rgb(251,47,18)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="575.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (10 samples, 0.33%)</title><rect x="72.0319%" y="549" width="0.3326%" height="15" fill="rgb(242,102,42)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="559.50"></text></g><g><title>torpedo::physics::make_octree::{{closure}}::{{closure}} (10 samples, 0.33%)</title><rect x="72.0319%" y="533" width="0.3326%" height="15" fill="rgb(234,31,38)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="543.50"></text></g><g><title>torpedo::physics::make_octree (10 samples, 0.33%)</title><rect x="72.0319%" y="517" width="0.3326%" height="15" fill="rgb(221,117,51)" fg:x="2166" fg:w="10"/><text x="72.2819%" y="527.50"></text></g><g><title>torpedo::physics::make_octree (7 samples, 0.23%)</title><rect x="72.1317%" y="501" width="0.2328%" height="15" fill="rgb(212,20,18)" fg:x="2169" fg:w="7"/><text x="72.3817%" y="511.50"></text></g><g><title>torpedo::physics::make_octree (6 samples, 0.20%)</title><rect x="72.1649%" y="485" width="0.1995%" height="15" fill="rgb(245,133,36)" fg:x="2170" fg:w="6"/><text x="72.4149%" y="495.50"></text></g><g><title>torpedo::arena::AVec&lt;T&gt;::push (6 samples, 0.20%)</title><rect x="72.1649%" y="469" width="0.1995%" height="15" fill="rgb(212,6,19)" fg:x="2170" fg:w="6"/><text x="72.4149%" y="479.50"></text></g><g><title>torpedo::arena::Arena::alloc_array_space (6 samples, 0.20%)</title><rect x="72.1649%" y="453" width="0.1995%" height="15" fill="rgb(218,1,36)" fg:x="2170" fg:w="6"/><text x="72.4149%" y="463.50"></text></g><g><title>torpedo::arena::Arena::unlock (4 samples, 0.13%)</title><rect x="72.2315%" y="437" width="0.1330%" height="15" fill="rgb(246,84,54)" fg:x="2172" fg:w="4"/><text x="72.4815%" y="447.50"></text></g><g><title>_pthread_cond_broadcast (4 samples, 0.13%)</title><rect x="72.2315%" y="421" width="0.1330%" height="15" fill="rgb(242,110,6)" fg:x="2172" fg:w="4"/><text x="72.4815%" y="431.50"></text></g><g><title>_pthread_rwlock_init (4 samples, 0.13%)</title><rect x="72.2315%" y="405" width="0.1330%" height="15" fill="rgb(214,47,5)" fg:x="2172" fg:w="4"/><text x="72.4815%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (2 samples, 0.07%)</title><rect x="72.3645%" y="693" width="0.0665%" height="15" fill="rgb(218,159,25)" fg:x="2176" fg:w="2"/><text x="72.6145%" y="703.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (2 samples, 0.07%)</title><rect x="72.3645%" y="677" width="0.0665%" height="15" fill="rgb(215,211,28)" fg:x="2176" fg:w="2"/><text x="72.6145%" y="687.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (2 samples, 0.07%)</title><rect x="72.3645%" y="661" width="0.0665%" height="15" fill="rgb(238,59,32)" fg:x="2176" fg:w="2"/><text x="72.6145%" y="671.50"></text></g><g><title>6109982720 (16 samples, 0.53%)</title><rect x="72.0319%" y="741" width="0.5321%" height="15" fill="rgb(226,82,3)" fg:x="2166" fg:w="16"/><text x="72.2819%" y="751.50"></text></g><g><title>__pthread_cond_wait (16 samples, 0.53%)</title><rect x="72.0319%" y="725" width="0.5321%" height="15" fill="rgb(240,164,32)" fg:x="2166" fg:w="16"/><text x="72.2819%" y="735.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (16 samples, 0.53%)</title><rect x="72.0319%" y="709" width="0.5321%" height="15" fill="rgb(232,46,7)" fg:x="2166" fg:w="16"/><text x="72.2819%" y="719.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (4 samples, 0.13%)</title><rect x="72.4310%" y="693" width="0.1330%" height="15" fill="rgb(229,129,53)" fg:x="2178" fg:w="4"/><text x="72.6810%" y="703.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (4 samples, 0.13%)</title><rect x="72.4310%" y="677" width="0.1330%" height="15" fill="rgb(234,188,29)" fg:x="2178" fg:w="4"/><text x="72.6810%" y="687.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (2 samples, 0.07%)</title><rect x="72.4975%" y="661" width="0.0665%" height="15" fill="rgb(246,141,4)" fg:x="2180" fg:w="2"/><text x="72.7475%" y="671.50"></text></g><g><title>torpedo::arena::Arena::alloc (1 samples, 0.03%)</title><rect x="72.6305%" y="501" width="0.0333%" height="15" fill="rgb(229,23,39)" fg:x="2184" fg:w="1"/><text x="72.8805%" y="511.50"></text></g><g><title>torpedo::arena::Arena::lock (1 samples, 0.03%)</title><rect x="72.6305%" y="485" width="0.0333%" height="15" fill="rgb(206,12,3)" fg:x="2184" fg:w="1"/><text x="72.8805%" y="495.50"></text></g><g><title>__pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="72.6305%" y="469" width="0.0333%" height="15" fill="rgb(252,226,20)" fg:x="2184" fg:w="1"/><text x="72.8805%" y="479.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="72.6305%" y="453" width="0.0333%" height="15" fill="rgb(216,123,35)" fg:x="2184" fg:w="1"/><text x="72.8805%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.07%)</title><rect x="72.6638%" y="485" width="0.0665%" height="15" fill="rgb(212,68,40)" fg:x="2185" fg:w="2"/><text x="72.9138%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.07%)</title><rect x="72.6638%" y="469" width="0.0665%" height="15" fill="rgb(254,125,32)" fg:x="2185" fg:w="2"/><text x="72.9138%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2 samples, 0.07%)</title><rect x="72.6638%" y="453" width="0.0665%" height="15" fill="rgb(253,97,22)" fg:x="2185" fg:w="2"/><text x="72.9138%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="72.6638%" y="437" width="0.0665%" height="15" fill="rgb(241,101,14)" fg:x="2185" fg:w="2"/><text x="72.9138%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.07%)</title><rect x="72.6638%" y="421" width="0.0665%" height="15" fill="rgb(238,103,29)" fg:x="2185" fg:w="2"/><text x="72.9138%" y="431.50"></text></g><g><title>__os_unfair_lock_lock_slow (2 samples, 0.07%)</title><rect x="72.6638%" y="405" width="0.0665%" height="15" fill="rgb(233,195,47)" fg:x="2185" fg:w="2"/><text x="72.9138%" y="415.50"></text></g><g><title>torpedo::arena::Arena::lock (1 samples, 0.03%)</title><rect x="72.7303%" y="469" width="0.0333%" height="15" fill="rgb(246,218,30)" fg:x="2187" fg:w="1"/><text x="72.9803%" y="479.50"></text></g><g><title>__pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="72.7303%" y="453" width="0.0333%" height="15" fill="rgb(219,145,47)" fg:x="2187" fg:w="1"/><text x="72.9803%" y="463.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="72.7303%" y="437" width="0.0333%" height="15" fill="rgb(243,12,26)" fg:x="2187" fg:w="1"/><text x="72.9803%" y="447.50"></text></g><g><title>torpedo::arena::Arena::alloc (2 samples, 0.07%)</title><rect x="72.7303%" y="485" width="0.0665%" height="15" fill="rgb(214,87,16)" fg:x="2187" fg:w="2"/><text x="72.9803%" y="495.50"></text></g><g><title>torpedo::arena::Arena::unlock (1 samples, 0.03%)</title><rect x="72.7636%" y="469" width="0.0333%" height="15" fill="rgb(208,99,42)" fg:x="2188" fg:w="1"/><text x="73.0136%" y="479.50"></text></g><g><title>_pthread_cond_broadcast (1 samples, 0.03%)</title><rect x="72.7636%" y="453" width="0.0333%" height="15" fill="rgb(253,99,2)" fg:x="2188" fg:w="1"/><text x="73.0136%" y="463.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="72.7636%" y="437" width="0.0333%" height="15" fill="rgb(220,168,23)" fg:x="2188" fg:w="1"/><text x="73.0136%" y="447.50"></text></g><g><title>torpedo::physics::PhysicsComp::max (1 samples, 0.03%)</title><rect x="72.7968%" y="485" width="0.0333%" height="15" fill="rgb(242,38,24)" fg:x="2189" fg:w="1"/><text x="73.0468%" y="495.50"></text></g><g><title>torpedo::physics::Collision::max (1 samples, 0.03%)</title><rect x="72.7968%" y="469" width="0.0333%" height="15" fill="rgb(225,182,9)" fg:x="2189" fg:w="1"/><text x="73.0468%" y="479.50"></text></g><g><title>torpedo::math::Vector4::to_matrix (1 samples, 0.03%)</title><rect x="72.7968%" y="453" width="0.0333%" height="15" fill="rgb(243,178,37)" fg:x="2189" fg:w="1"/><text x="73.0468%" y="463.50"></text></g><g><title>torpedo::arena::Arena::lock (4 samples, 0.13%)</title><rect x="72.8301%" y="437" width="0.1330%" height="15" fill="rgb(232,139,19)" fg:x="2190" fg:w="4"/><text x="73.0801%" y="447.50"></text></g><g><title>__pthread_mutex_firstfit_unlock_slow (4 samples, 0.13%)</title><rect x="72.8301%" y="421" width="0.1330%" height="15" fill="rgb(225,201,24)" fg:x="2190" fg:w="4"/><text x="73.0801%" y="431.50"></text></g><g><title>_pthread_rwlock_init (4 samples, 0.13%)</title><rect x="72.8301%" y="405" width="0.1330%" height="15" fill="rgb(221,47,46)" fg:x="2190" fg:w="4"/><text x="73.0801%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.37%)</title><rect x="72.6305%" y="693" width="0.3658%" height="15" fill="rgb(249,23,13)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.37%)</title><rect x="72.6305%" y="677" width="0.3658%" height="15" fill="rgb(219,9,5)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11 samples, 0.37%)</title><rect x="72.6305%" y="661" width="0.3658%" height="15" fill="rgb(254,171,16)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (11 samples, 0.37%)</title><rect x="72.6305%" y="645" width="0.3658%" height="15" fill="rgb(230,171,20)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="655.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.37%)</title><rect x="72.6305%" y="629" width="0.3658%" height="15" fill="rgb(210,71,41)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="639.50"></text></g><g><title>std::panicking::try (11 samples, 0.37%)</title><rect x="72.6305%" y="613" width="0.3658%" height="15" fill="rgb(206,173,20)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="623.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.37%)</title><rect x="72.6305%" y="597" width="0.3658%" height="15" fill="rgb(233,88,34)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.37%)</title><rect x="72.6305%" y="581" width="0.3658%" height="15" fill="rgb(223,209,46)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (11 samples, 0.37%)</title><rect x="72.6305%" y="565" width="0.3658%" height="15" fill="rgb(250,43,18)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="575.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (11 samples, 0.37%)</title><rect x="72.6305%" y="549" width="0.3658%" height="15" fill="rgb(208,13,10)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="559.50"></text></g><g><title>torpedo::physics::make_octree::{{closure}}::{{closure}} (11 samples, 0.37%)</title><rect x="72.6305%" y="533" width="0.3658%" height="15" fill="rgb(212,200,36)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="543.50"></text></g><g><title>torpedo::physics::make_octree (11 samples, 0.37%)</title><rect x="72.6305%" y="517" width="0.3658%" height="15" fill="rgb(225,90,30)" fg:x="2184" fg:w="11"/><text x="72.8805%" y="527.50"></text></g><g><title>torpedo::physics::make_octree (10 samples, 0.33%)</title><rect x="72.6638%" y="501" width="0.3326%" height="15" fill="rgb(236,182,39)" fg:x="2185" fg:w="10"/><text x="72.9138%" y="511.50"></text></g><g><title>torpedo::physics::make_octree (5 samples, 0.17%)</title><rect x="72.8301%" y="485" width="0.1663%" height="15" fill="rgb(212,144,35)" fg:x="2190" fg:w="5"/><text x="73.0801%" y="495.50"></text></g><g><title>torpedo::arena::AVec&lt;T&gt;::push (5 samples, 0.17%)</title><rect x="72.8301%" y="469" width="0.1663%" height="15" fill="rgb(228,63,44)" fg:x="2190" fg:w="5"/><text x="73.0801%" y="479.50"></text></g><g><title>torpedo::arena::Arena::alloc_array_space (5 samples, 0.17%)</title><rect x="72.8301%" y="453" width="0.1663%" height="15" fill="rgb(228,109,6)" fg:x="2190" fg:w="5"/><text x="73.0801%" y="463.50"></text></g><g><title>torpedo::arena::Arena::unlock (1 samples, 0.03%)</title><rect x="72.9631%" y="437" width="0.0333%" height="15" fill="rgb(238,117,24)" fg:x="2194" fg:w="1"/><text x="73.2131%" y="447.50"></text></g><g><title>_pthread_cond_broadcast (1 samples, 0.03%)</title><rect x="72.9631%" y="421" width="0.0333%" height="15" fill="rgb(242,26,26)" fg:x="2194" fg:w="1"/><text x="73.2131%" y="431.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="72.9631%" y="405" width="0.0333%" height="15" fill="rgb(221,92,48)" fg:x="2194" fg:w="1"/><text x="73.2131%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::pal::unix::stack_overflow::Handler&gt; (3 samples, 0.10%)</title><rect x="72.9963%" y="693" width="0.0998%" height="15" fill="rgb(209,209,32)" fg:x="2195" fg:w="3"/><text x="73.2463%" y="703.50"></text></g><g><title>&lt;std::sys::pal::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (3 samples, 0.10%)</title><rect x="72.9963%" y="677" width="0.0998%" height="15" fill="rgb(221,70,22)" fg:x="2195" fg:w="3"/><text x="73.2463%" y="687.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::drop_handler (3 samples, 0.10%)</title><rect x="72.9963%" y="661" width="0.0998%" height="15" fill="rgb(248,145,5)" fg:x="2195" fg:w="3"/><text x="73.2463%" y="671.50"></text></g><g><title>6112129024 (17 samples, 0.57%)</title><rect x="72.5640%" y="741" width="0.5653%" height="15" fill="rgb(226,116,26)" fg:x="2182" fg:w="17"/><text x="72.8140%" y="751.50"></text></g><g><title>__pthread_cond_wait (17 samples, 0.57%)</title><rect x="72.5640%" y="725" width="0.5653%" height="15" fill="rgb(244,5,17)" fg:x="2182" fg:w="17"/><text x="72.8140%" y="735.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (15 samples, 0.50%)</title><rect x="72.6305%" y="709" width="0.4988%" height="15" fill="rgb(252,159,33)" fg:x="2184" fg:w="15"/><text x="72.8805%" y="719.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::Handler::new (1 samples, 0.03%)</title><rect x="73.0961%" y="693" width="0.0333%" height="15" fill="rgb(206,71,0)" fg:x="2198" fg:w="1"/><text x="73.3461%" y="703.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (1 samples, 0.03%)</title><rect x="73.0961%" y="677" width="0.0333%" height="15" fill="rgb(233,118,54)" fg:x="2198" fg:w="1"/><text x="73.3461%" y="687.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack (1 samples, 0.03%)</title><rect x="73.0961%" y="661" width="0.0333%" height="15" fill="rgb(234,83,48)" fg:x="2198" fg:w="1"/><text x="73.3461%" y="671.50"></text></g><g><title>__os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="74.0938%" y="725" width="0.0333%" height="15" fill="rgb(228,3,54)" fg:x="2228" fg:w="1"/><text x="74.3438%" y="735.50"></text></g><g><title>_host_get_special_port (1 samples, 0.03%)</title><rect x="74.1270%" y="725" width="0.0333%" height="15" fill="rgb(226,155,13)" fg:x="2229" fg:w="1"/><text x="74.3770%" y="735.50"></text></g><g><title>_mach_continuous_time (2 samples, 0.07%)</title><rect x="74.1603%" y="725" width="0.0665%" height="15" fill="rgb(241,28,37)" fg:x="2230" fg:w="2"/><text x="74.4103%" y="735.50"></text></g><g><title>__kernelrpc_vm_read (2 samples, 0.07%)</title><rect x="74.1603%" y="709" width="0.0665%" height="15" fill="rgb(233,93,10)" fg:x="2230" fg:w="2"/><text x="74.4103%" y="719.50"></text></g><g><title>_proc_clear_dirty (2 samples, 0.07%)</title><rect x="74.1603%" y="693" width="0.0665%" height="15" fill="rgb(225,113,19)" fg:x="2230" fg:w="2"/><text x="74.4103%" y="703.50"></text></g><g><title>__kernelrpc_mach_vm_map (1 samples, 0.03%)</title><rect x="74.4596%" y="389" width="0.0333%" height="15" fill="rgb(241,2,18)" fg:x="2239" fg:w="1"/><text x="74.7096%" y="399.50"></text></g><g><title>_geteuid (2 samples, 0.07%)</title><rect x="74.4929%" y="389" width="0.0665%" height="15" fill="rgb(228,207,21)" fg:x="2240" fg:w="2"/><text x="74.7429%" y="399.50"></text></g><g><title>Unknown (10 samples, 0.33%)</title><rect x="74.2601%" y="405" width="0.3326%" height="15" fill="rgb(213,211,35)" fg:x="2233" fg:w="10"/><text x="74.5101%" y="415.50"></text></g><g><title>_proc_clear_dirty (1 samples, 0.03%)</title><rect x="74.5594%" y="389" width="0.0333%" height="15" fill="rgb(209,83,10)" fg:x="2242" fg:w="1"/><text x="74.8094%" y="399.50"></text></g><g><title>_mach_continuous_time (1 samples, 0.03%)</title><rect x="74.5926%" y="405" width="0.0333%" height="15" fill="rgb(209,164,1)" fg:x="2243" fg:w="1"/><text x="74.8426%" y="415.50"></text></g><g><title>__kernelrpc_vm_read (1 samples, 0.03%)</title><rect x="74.5926%" y="389" width="0.0333%" height="15" fill="rgb(213,184,43)" fg:x="2243" fg:w="1"/><text x="74.8426%" y="399.50"></text></g><g><title>_proc_clear_dirty (1 samples, 0.03%)</title><rect x="74.5926%" y="373" width="0.0333%" height="15" fill="rgb(231,61,34)" fg:x="2243" fg:w="1"/><text x="74.8426%" y="383.50"></text></g><g><title>Unknown (13 samples, 0.43%)</title><rect x="74.2268%" y="421" width="0.4323%" height="15" fill="rgb(235,75,3)" fg:x="2232" fg:w="13"/><text x="74.4768%" y="431.50"></text></g><g><title>_proc_clear_dirty (1 samples, 0.03%)</title><rect x="74.6259%" y="405" width="0.0333%" height="15" fill="rgb(220,106,47)" fg:x="2244" fg:w="1"/><text x="74.8759%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;raylib::core::RaylibHandle&gt; (14 samples, 0.47%)</title><rect x="74.2268%" y="485" width="0.4656%" height="15" fill="rgb(210,196,33)" fg:x="2232" fg:w="14"/><text x="74.4768%" y="495.50"></text></g><g><title>Unknown (14 samples, 0.47%)</title><rect x="74.2268%" y="469" width="0.4656%" height="15" fill="rgb(229,154,42)" fg:x="2232" fg:w="14"/><text x="74.4768%" y="479.50"></text></g><g><title>Unknown (14 samples, 0.47%)</title><rect x="74.2268%" y="453" width="0.4656%" height="15" fill="rgb(228,114,26)" fg:x="2232" fg:w="14"/><text x="74.4768%" y="463.50"></text></g><g><title>Unknown (14 samples, 0.47%)</title><rect x="74.2268%" y="437" width="0.4656%" height="15" fill="rgb(208,144,1)" fg:x="2232" fg:w="14"/><text x="74.4768%" y="447.50"></text></g><g><title>___workq_open (1 samples, 0.03%)</title><rect x="74.6591%" y="421" width="0.0333%" height="15" fill="rgb(239,112,37)" fg:x="2245" fg:w="1"/><text x="74.9091%" y="431.50"></text></g><g><title>_kpersona_get (1 samples, 0.03%)</title><rect x="75.5903%" y="357" width="0.0333%" height="15" fill="rgb(210,96,50)" fg:x="2273" fg:w="1"/><text x="75.8403%" y="367.50"></text></g><g><title>Unknown (9 samples, 0.30%)</title><rect x="75.3575%" y="373" width="0.2993%" height="15" fill="rgb(222,178,2)" fg:x="2266" fg:w="9"/><text x="75.6075%" y="383.50"></text></g><g><title>_posix_spawnattr_set_qos_clamp_np (1 samples, 0.03%)</title><rect x="75.6235%" y="357" width="0.0333%" height="15" fill="rgb(226,74,18)" fg:x="2274" fg:w="1"/><text x="75.8735%" y="367.50"></text></g><g><title>___workq_open (1 samples, 0.03%)</title><rect x="75.6568%" y="373" width="0.0333%" height="15" fill="rgb(225,67,54)" fg:x="2275" fg:w="1"/><text x="75.9068%" y="383.50"></text></g><g><title>_mach_continuous_time (1 samples, 0.03%)</title><rect x="75.6901%" y="373" width="0.0333%" height="15" fill="rgb(251,92,32)" fg:x="2276" fg:w="1"/><text x="75.9401%" y="383.50"></text></g><g><title>__kernelrpc_vm_read (1 samples, 0.03%)</title><rect x="75.6901%" y="357" width="0.0333%" height="15" fill="rgb(228,149,22)" fg:x="2276" fg:w="1"/><text x="75.9401%" y="367.50"></text></g><g><title>_proc_clear_dirty (1 samples, 0.03%)</title><rect x="75.6901%" y="341" width="0.0333%" height="15" fill="rgb(243,54,13)" fg:x="2276" fg:w="1"/><text x="75.9401%" y="351.50"></text></g><g><title>_os_cpu_in_cksum_mbuf (1 samples, 0.03%)</title><rect x="75.7233%" y="373" width="0.0333%" height="15" fill="rgb(243,180,28)" fg:x="2277" fg:w="1"/><text x="75.9733%" y="383.50"></text></g><g><title>_proc_clear_dirty (3 samples, 0.10%)</title><rect x="75.7566%" y="373" width="0.0998%" height="15" fill="rgb(208,167,24)" fg:x="2278" fg:w="3"/><text x="76.0066%" y="383.50"></text></g><g><title>Unknown (26 samples, 0.86%)</title><rect x="75.0582%" y="389" width="0.8646%" height="15" fill="rgb(245,73,45)" fg:x="2257" fg:w="26"/><text x="75.3082%" y="399.50"></text></g><g><title>_vm_copy (2 samples, 0.07%)</title><rect x="75.8563%" y="373" width="0.0665%" height="15" fill="rgb(237,203,48)" fg:x="2281" fg:w="2"/><text x="76.1063%" y="383.50"></text></g><g><title>_proc_clear_dirty (2 samples, 0.07%)</title><rect x="75.8563%" y="357" width="0.0665%" height="15" fill="rgb(211,197,16)" fg:x="2281" fg:w="2"/><text x="76.1063%" y="367.50"></text></g><g><title>Unknown (37 samples, 1.23%)</title><rect x="74.7256%" y="405" width="1.2305%" height="15" fill="rgb(243,99,51)" fg:x="2247" fg:w="37"/><text x="74.9756%" y="415.50"></text></g><g><title>_os_cpu_in_cksum_mbuf (1 samples, 0.03%)</title><rect x="75.9228%" y="389" width="0.0333%" height="15" fill="rgb(215,123,29)" fg:x="2283" fg:w="1"/><text x="76.1728%" y="399.50"></text></g><g><title>raylib::core::RaylibBuilder::build (39 samples, 1.30%)</title><rect x="74.6924%" y="485" width="1.2970%" height="15" fill="rgb(239,186,37)" fg:x="2246" fg:w="39"/><text x="74.9424%" y="495.50"></text></g><g><title>raylib::core::init_window (39 samples, 1.30%)</title><rect x="74.6924%" y="469" width="1.2970%" height="15" fill="rgb(252,136,39)" fg:x="2246" fg:w="39"/><text x="74.9424%" y="479.50"></text></g><g><title>Unknown (39 samples, 1.30%)</title><rect x="74.6924%" y="453" width="1.2970%" height="15" fill="rgb(223,213,32)" fg:x="2246" fg:w="39"/><text x="74.9424%" y="463.50"></text></g><g><title>Unknown (39 samples, 1.30%)</title><rect x="74.6924%" y="437" width="1.2970%" height="15" fill="rgb(233,115,5)" fg:x="2246" fg:w="39"/><text x="74.9424%" y="447.50"></text></g><g><title>Unknown (39 samples, 1.30%)</title><rect x="74.6924%" y="421" width="1.2970%" height="15" fill="rgb(207,226,44)" fg:x="2246" fg:w="39"/><text x="74.9424%" y="431.50"></text></g><g><title>_posix_spawnattr_set_qos_clamp_np (1 samples, 0.03%)</title><rect x="75.9561%" y="405" width="0.0333%" height="15" fill="rgb(208,126,0)" fg:x="2284" fg:w="1"/><text x="76.2061%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (2 samples, 0.07%)</title><rect x="75.9894%" y="469" width="0.0665%" height="15" fill="rgb(244,66,21)" fg:x="2285" fg:w="2"/><text x="76.2394%" y="479.50"></text></g><g><title>torpedo::make_test_level (2 samples, 0.07%)</title><rect x="75.9894%" y="453" width="0.0665%" height="15" fill="rgb(222,97,12)" fg:x="2285" fg:w="2"/><text x="76.2394%" y="463.50"></text></g><g><title>torpedo::level::default_setup (2 samples, 0.07%)</title><rect x="75.9894%" y="437" width="0.0665%" height="15" fill="rgb(219,213,19)" fg:x="2285" fg:w="2"/><text x="76.2394%" y="447.50"></text></g><g><title>torpedo::level::init_level (2 samples, 0.07%)</title><rect x="75.9894%" y="421" width="0.0665%" height="15" fill="rgb(252,169,30)" fg:x="2285" fg:w="2"/><text x="76.2394%" y="431.50"></text></g><g><title>torpedo::level::Level::new (2 samples, 0.07%)</title><rect x="75.9894%" y="405" width="0.0665%" height="15" fill="rgb(206,32,51)" fg:x="2285" fg:w="2"/><text x="76.2394%" y="415.50"></text></g><g><title>torpedo::level::ComponentList&lt;T&gt;::init (2 samples, 0.07%)</title><rect x="75.9894%" y="389" width="0.0665%" height="15" fill="rgb(250,172,42)" fg:x="2285" fg:w="2"/><text x="76.2394%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (2 samples, 0.07%)</title><rect x="75.9894%" y="373" width="0.0665%" height="15" fill="rgb(209,34,43)" fg:x="2285" fg:w="2"/><text x="76.2394%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2 samples, 0.07%)</title><rect x="75.9894%" y="357" width="0.0665%" height="15" fill="rgb(223,11,35)" fg:x="2285" fg:w="2"/><text x="76.2394%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;torpedo::level::Level&gt;&gt; (2 samples, 0.07%)</title><rect x="76.0559%" y="469" width="0.0665%" height="15" fill="rgb(251,219,26)" fg:x="2287" fg:w="2"/><text x="76.3059%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;torpedo::level::Level&gt; (2 samples, 0.07%)</title><rect x="76.0559%" y="453" width="0.0665%" height="15" fill="rgb(231,119,3)" fg:x="2287" fg:w="2"/><text x="76.3059%" y="463.50"></text></g><g><title>Unknown (5 samples, 0.17%)</title><rect x="84.7689%" y="389" width="0.1663%" height="15" fill="rgb(216,97,11)" fg:x="2549" fg:w="5"/><text x="85.0189%" y="399.50"></text></g><g><title>___workq_open (1 samples, 0.03%)</title><rect x="84.9352%" y="389" width="0.0333%" height="15" fill="rgb(223,59,9)" fg:x="2554" fg:w="1"/><text x="85.1852%" y="399.50"></text></g><g><title>__kernelrpc_thread_policy (2 samples, 0.07%)</title><rect x="84.9684%" y="389" width="0.0665%" height="15" fill="rgb(233,93,31)" fg:x="2555" fg:w="2"/><text x="85.2184%" y="399.50"></text></g><g><title>_proc_clear_dirty (2 samples, 0.07%)</title><rect x="84.9684%" y="373" width="0.0665%" height="15" fill="rgb(239,81,33)" fg:x="2555" fg:w="2"/><text x="85.2184%" y="383.50"></text></g><g><title>__kernelrpc_vm_remap (1 samples, 0.03%)</title><rect x="85.0349%" y="389" width="0.0333%" height="15" fill="rgb(213,120,34)" fg:x="2557" fg:w="1"/><text x="85.2849%" y="399.50"></text></g><g><title>_host_get_special_port (1 samples, 0.03%)</title><rect x="85.0682%" y="389" width="0.0333%" height="15" fill="rgb(243,49,53)" fg:x="2558" fg:w="1"/><text x="85.3182%" y="399.50"></text></g><g><title>_mach_continuous_time (54 samples, 1.80%)</title><rect x="85.1014%" y="389" width="1.7958%" height="15" fill="rgb(247,216,33)" fg:x="2559" fg:w="54"/><text x="85.3514%" y="399.50">_..</text></g><g><title>__kernelrpc_vm_read (54 samples, 1.80%)</title><rect x="85.1014%" y="373" width="1.7958%" height="15" fill="rgb(226,26,14)" fg:x="2559" fg:w="54"/><text x="85.3514%" y="383.50">_..</text></g><g><title>_proc_clear_dirty (54 samples, 1.80%)</title><rect x="85.1014%" y="357" width="1.7958%" height="15" fill="rgb(215,49,53)" fg:x="2559" fg:w="54"/><text x="85.3514%" y="367.50">_..</text></g><g><title>_mach_error_string_int (1 samples, 0.03%)</title><rect x="86.8972%" y="389" width="0.0333%" height="15" fill="rgb(245,162,40)" fg:x="2613" fg:w="1"/><text x="87.1472%" y="399.50"></text></g><g><title>_proc_clear_dirty (201 samples, 6.68%)</title><rect x="86.9305%" y="389" width="6.6844%" height="15" fill="rgb(229,68,17)" fg:x="2614" fg:w="201"/><text x="87.1805%" y="399.50">_proc_cle..</text></g><g><title>_proc_setpcontrol (90 samples, 2.99%)</title><rect x="93.6149%" y="389" width="2.9930%" height="15" fill="rgb(213,182,10)" fg:x="2815" fg:w="90"/><text x="93.8649%" y="399.50">_pr..</text></g><g><title>_pthread_cond_broadcast (1 samples, 0.03%)</title><rect x="96.6079%" y="389" width="0.0333%" height="15" fill="rgb(245,125,30)" fg:x="2905" fg:w="1"/><text x="96.8579%" y="399.50"></text></g><g><title>_pthread_rwlock_init (1 samples, 0.03%)</title><rect x="96.6079%" y="373" width="0.0333%" height="15" fill="rgb(232,202,2)" fg:x="2905" fg:w="1"/><text x="96.8579%" y="383.50"></text></g><g><title>_pthread_get_qos_class_np (1 samples, 0.03%)</title><rect x="96.6412%" y="389" width="0.0333%" height="15" fill="rgb(237,140,51)" fg:x="2906" fg:w="1"/><text x="96.8912%" y="399.50"></text></g><g><title>_setxattr (1 samples, 0.03%)</title><rect x="96.6744%" y="389" width="0.0333%" height="15" fill="rgb(236,157,25)" fg:x="2907" fg:w="1"/><text x="96.9244%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;raylib::core::drawing::RaylibDrawHandle&gt; (621 samples, 20.65%)</title><rect x="76.1224%" y="469" width="20.6518%" height="15" fill="rgb(219,209,0)" fg:x="2289" fg:w="621"/><text x="76.3724%" y="479.50">core::ptr::drop_in_place&lt;raylib::..</text></g><g><title>Unknown (621 samples, 20.65%)</title><rect x="76.1224%" y="453" width="20.6518%" height="15" fill="rgb(240,116,54)" fg:x="2289" fg:w="621"/><text x="76.3724%" y="463.50">Unknown</text></g><g><title>Unknown (621 samples, 20.65%)</title><rect x="76.1224%" y="437" width="20.6518%" height="15" fill="rgb(216,10,36)" fg:x="2289" fg:w="621"/><text x="76.3724%" y="447.50">Unknown</text></g><g><title>Unknown (615 samples, 20.45%)</title><rect x="76.3219%" y="421" width="20.4523%" height="15" fill="rgb(222,72,44)" fg:x="2295" fg:w="615"/><text x="76.5719%" y="431.50">Unknown</text></g><g><title>Unknown (612 samples, 20.35%)</title><rect x="76.4217%" y="405" width="20.3525%" height="15" fill="rgb(232,159,9)" fg:x="2298" fg:w="612"/><text x="76.6717%" y="415.50">Unknown</text></g><g><title>_vm_remap (2 samples, 0.07%)</title><rect x="96.7077%" y="389" width="0.0665%" height="15" fill="rgb(210,39,32)" fg:x="2908" fg:w="2"/><text x="96.9577%" y="399.50"></text></g><g><title>_vm_remap (2 samples, 0.07%)</title><rect x="96.7077%" y="373" width="0.0665%" height="15" fill="rgb(216,194,45)" fg:x="2908" fg:w="2"/><text x="96.9577%" y="383.50"></text></g><g><title>raylib::core::drawing::RaylibDraw::clear_background (2 samples, 0.07%)</title><rect x="96.7742%" y="469" width="0.0665%" height="15" fill="rgb(218,18,35)" fg:x="2910" fg:w="2"/><text x="97.0242%" y="479.50"></text></g><g><title>Unknown (2 samples, 0.07%)</title><rect x="96.7742%" y="453" width="0.0665%" height="15" fill="rgb(207,83,51)" fg:x="2910" fg:w="2"/><text x="97.0242%" y="463.50"></text></g><g><title>Unknown (2 samples, 0.07%)</title><rect x="96.7742%" y="437" width="0.0665%" height="15" fill="rgb(225,63,43)" fg:x="2910" fg:w="2"/><text x="97.0242%" y="447.50"></text></g><g><title>raylib::core::text::&lt;impl raylib::core::RaylibHandle&gt;::get_font_default (1 samples, 0.03%)</title><rect x="96.8407%" y="469" width="0.0333%" height="15" fill="rgb(207,57,36)" fg:x="2912" fg:w="1"/><text x="97.0907%" y="479.50"></text></g><g><title>Unknown (1 samples, 0.03%)</title><rect x="96.8407%" y="453" width="0.0333%" height="15" fill="rgb(216,99,33)" fg:x="2912" fg:w="1"/><text x="97.0907%" y="463.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (30 samples, 1.00%)</title><rect x="96.8740%" y="469" width="0.9977%" height="15" fill="rgb(225,42,16)" fg:x="2913" fg:w="30"/><text x="97.1240%" y="479.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (30 samples, 1.00%)</title><rect x="96.8740%" y="453" width="0.9977%" height="15" fill="rgb(220,201,45)" fg:x="2913" fg:w="30"/><text x="97.1240%" y="463.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::join (30 samples, 1.00%)</title><rect x="96.8740%" y="437" width="0.9977%" height="15" fill="rgb(225,33,4)" fg:x="2913" fg:w="30"/><text x="97.1240%" y="447.50"></text></g><g><title>_pthread_mutex_setprioceiling (30 samples, 1.00%)</title><rect x="96.8740%" y="421" width="0.9977%" height="15" fill="rgb(224,33,50)" fg:x="2913" fg:w="30"/><text x="97.1240%" y="431.50"></text></g><g><title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="97.8384%" y="405" width="0.0333%" height="15" fill="rgb(246,198,51)" fg:x="2942" fg:w="1"/><text x="98.0884%" y="415.50"></text></g><g><title>___workq_open (1 samples, 0.03%)</title><rect x="97.8384%" y="389" width="0.0333%" height="15" fill="rgb(205,22,4)" fg:x="2942" fg:w="1"/><text x="98.0884%" y="399.50"></text></g><g><title>__pthread_jit_write_protect_bulk_image_load_callback (9 samples, 0.30%)</title><rect x="97.8716%" y="389" width="0.2993%" height="15" fill="rgb(206,3,8)" fg:x="2943" fg:w="9"/><text x="98.1216%" y="399.50"></text></g><g><title>__pthread_workqueue_allow_send_signals (7 samples, 0.23%)</title><rect x="98.1709%" y="389" width="0.2328%" height="15" fill="rgb(251,23,15)" fg:x="2952" fg:w="7"/><text x="98.4209%" y="399.50"></text></g><g><title>_kpersona_get (7 samples, 0.23%)</title><rect x="98.1709%" y="373" width="0.2328%" height="15" fill="rgb(252,88,28)" fg:x="2952" fg:w="7"/><text x="98.4209%" y="383.50"></text></g><g><title>std::thread::spawn (41 samples, 1.36%)</title><rect x="97.8716%" y="469" width="1.3635%" height="15" fill="rgb(212,127,14)" fg:x="2943" fg:w="41"/><text x="98.1216%" y="479.50"></text></g><g><title>std::thread::Builder::spawn (41 samples, 1.36%)</title><rect x="97.8716%" y="453" width="1.3635%" height="15" fill="rgb(247,145,37)" fg:x="2943" fg:w="41"/><text x="98.1216%" y="463.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (41 samples, 1.36%)</title><rect x="97.8716%" y="437" width="1.3635%" height="15" fill="rgb(209,117,53)" fg:x="2943" fg:w="41"/><text x="98.1216%" y="447.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (41 samples, 1.36%)</title><rect x="97.8716%" y="421" width="1.3635%" height="15" fill="rgb(212,90,42)" fg:x="2943" fg:w="41"/><text x="98.1216%" y="431.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (41 samples, 1.36%)</title><rect x="97.8716%" y="405" width="1.3635%" height="15" fill="rgb(218,164,37)" fg:x="2943" fg:w="41"/><text x="98.1216%" y="415.50"></text></g><g><title>_pthread_workqueue_addthreads_np (25 samples, 0.83%)</title><rect x="98.4037%" y="389" width="0.8314%" height="15" fill="rgb(246,65,34)" fg:x="2959" fg:w="25"/><text x="98.6537%" y="399.50"></text></g><g><title>__kernelrpc_mach_vm_allocate_trap (25 samples, 0.83%)</title><rect x="98.4037%" y="373" width="0.8314%" height="15" fill="rgb(231,100,33)" fg:x="2959" fg:w="25"/><text x="98.6537%" y="383.50"></text></g><g><title>raylib::core::drawing::RaylibDraw::draw_fps (1 samples, 0.03%)</title><rect x="99.3349%" y="453" width="0.0333%" height="15" fill="rgb(228,126,14)" fg:x="2987" fg:w="1"/><text x="99.5849%" y="463.50"></text></g><g><title>Unknown (1 samples, 0.03%)</title><rect x="99.3349%" y="437" width="0.0333%" height="15" fill="rgb(215,173,21)" fg:x="2987" fg:w="1"/><text x="99.5849%" y="447.50"></text></g><g><title>Unknown (1 samples, 0.03%)</title><rect x="99.3349%" y="421" width="0.0333%" height="15" fill="rgb(210,6,40)" fg:x="2987" fg:w="1"/><text x="99.5849%" y="431.50"></text></g><g><title>Unknown (1 samples, 0.03%)</title><rect x="99.3349%" y="405" width="0.0333%" height="15" fill="rgb(212,48,18)" fg:x="2987" fg:w="1"/><text x="99.5849%" y="415.50"></text></g><g><title>Unknown (1 samples, 0.03%)</title><rect x="99.3349%" y="389" width="0.0333%" height="15" fill="rgb(230,214,11)" fg:x="2987" fg:w="1"/><text x="99.5849%" y="399.50"></text></g><g><title>&lt;raylib::core::math::Matrix as core::ops::arith::MulAssign&gt;::mul_assign (2 samples, 0.07%)</title><rect x="99.3681%" y="437" width="0.0665%" height="15" fill="rgb(254,105,39)" fg:x="2988" fg:w="2"/><text x="99.6181%" y="447.50"></text></g><g><title>all (3,007 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(245,158,5)" fg:x="0" fg:w="3007"/><text x="0.2500%" y="767.50"></text></g><g><title>8336018560 (808 samples, 26.87%)</title><rect x="73.1294%" y="741" width="26.8706%" height="15" fill="rgb(249,208,11)" fg:x="2199" fg:w="808"/><text x="73.3794%" y="751.50">8336018560</text></g><g><title>_main (775 samples, 25.77%)</title><rect x="74.2268%" y="725" width="25.7732%" height="15" fill="rgb(210,39,28)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="735.50">_main</text></g><g><title>std::rt::lang_start_internal (775 samples, 25.77%)</title><rect x="74.2268%" y="709" width="25.7732%" height="15" fill="rgb(211,56,53)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="719.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (775 samples, 25.77%)</title><rect x="74.2268%" y="693" width="25.7732%" height="15" fill="rgb(226,201,30)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (775 samples, 25.77%)</title><rect x="74.2268%" y="677" width="25.7732%" height="15" fill="rgb(239,101,34)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (775 samples, 25.77%)</title><rect x="74.2268%" y="661" width="25.7732%" height="15" fill="rgb(226,209,5)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="671.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (775 samples, 25.77%)</title><rect x="74.2268%" y="645" width="25.7732%" height="15" fill="rgb(250,105,47)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="655.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (775 samples, 25.77%)</title><rect x="74.2268%" y="629" width="25.7732%" height="15" fill="rgb(230,72,3)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="639.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (775 samples, 25.77%)</title><rect x="74.2268%" y="613" width="25.7732%" height="15" fill="rgb(232,218,39)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="623.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (775 samples, 25.77%)</title><rect x="74.2268%" y="597" width="25.7732%" height="15" fill="rgb(248,166,6)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="607.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (775 samples, 25.77%)</title><rect x="74.2268%" y="581" width="25.7732%" height="15" fill="rgb(247,89,20)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="591.50">core::ops::function::impls::&lt;impl core::o..</text></g><g><title>std::rt::lang_start::{{closure}} (775 samples, 25.77%)</title><rect x="74.2268%" y="565" width="25.7732%" height="15" fill="rgb(248,130,54)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="575.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (775 samples, 25.77%)</title><rect x="74.2268%" y="549" width="25.7732%" height="15" fill="rgb(234,196,4)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="559.50">std::sys::backtrace::__rust_begin_short_b..</text></g><g><title>core::ops::function::FnOnce::call_once (775 samples, 25.77%)</title><rect x="74.2268%" y="533" width="25.7732%" height="15" fill="rgb(250,143,31)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="543.50">core::ops::function::FnOnce::call_once</text></g><g><title>torpedo::main (775 samples, 25.77%)</title><rect x="74.2268%" y="517" width="25.7732%" height="15" fill="rgb(211,110,34)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="527.50">torpedo::main</text></g><g><title>torpedo::level::main_loop (775 samples, 25.77%)</title><rect x="74.2268%" y="501" width="25.7732%" height="15" fill="rgb(215,124,48)" fg:x="2232" fg:w="775"/><text x="74.4768%" y="511.50">torpedo::level::main_loop</text></g><g><title>torpedo::level::level_loop (722 samples, 24.01%)</title><rect x="75.9894%" y="485" width="24.0106%" height="15" fill="rgb(216,46,13)" fg:x="2285" fg:w="722"/><text x="76.2394%" y="495.50">torpedo::level::level_loop</text></g><g><title>torpedo::renderer::render (23 samples, 0.76%)</title><rect x="99.2351%" y="469" width="0.7649%" height="15" fill="rgb(205,184,25)" fg:x="2984" fg:w="23"/><text x="99.4851%" y="479.50"></text></g><g><title>torpedo::renderer::render_object (19 samples, 0.63%)</title><rect x="99.3681%" y="453" width="0.6319%" height="15" fill="rgb(228,1,10)" fg:x="2988" fg:w="19"/><text x="99.6181%" y="463.50"></text></g><g><title>raylib::core::drawing::RaylibDraw3D::draw_model (17 samples, 0.57%)</title><rect x="99.4347%" y="437" width="0.5653%" height="15" fill="rgb(213,116,27)" fg:x="2990" fg:w="17"/><text x="99.6847%" y="447.50"></text></g><g><title>Unknown (17 samples, 0.57%)</title><rect x="99.4347%" y="421" width="0.5653%" height="15" fill="rgb(241,95,50)" fg:x="2990" fg:w="17"/><text x="99.6847%" y="431.50"></text></g><g><title>Unknown (17 samples, 0.57%)</title><rect x="99.4347%" y="405" width="0.5653%" height="15" fill="rgb(238,48,32)" fg:x="2990" fg:w="17"/><text x="99.6847%" y="415.50"></text></g><g><title>Unknown (17 samples, 0.57%)</title><rect x="99.4347%" y="389" width="0.5653%" height="15" fill="rgb(235,113,49)" fg:x="2990" fg:w="17"/><text x="99.6847%" y="399.50"></text></g><g><title>Unknown (17 samples, 0.57%)</title><rect x="99.4347%" y="373" width="0.5653%" height="15" fill="rgb(205,127,43)" fg:x="2990" fg:w="17"/><text x="99.6847%" y="383.50"></text></g></svg></svg>